//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

using Domain.Core.Entities;

namespace Domain.MainModules.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(TBL_Admin_ModuleType))]
    
    public partial class TBL_Admin_ModuleRepository: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int IdModuleRepository
        {
            get { return _idModuleRepository; }
            set
            {
                if (_idModuleRepository != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'IdModuleRepository' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _idModuleRepository = value;
                    OnPropertyChanged("IdModuleRepository");
                }
            }
        }
        private int _idModuleRepository;
    
        [DataMember]
        public int IdModuleType
        {
            get { return _idModuleType; }
            set
            {
                if (_idModuleType != value)
                {
                    ChangeTracker.RecordOriginalValue("IdModuleType", _idModuleType);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_ModuleType != null && TBL_Admin_ModuleType.IdModuleType != value)
                        {
                            TBL_Admin_ModuleType = null;
                        }
                    }
                    _idModuleType = value;
                    OnPropertyChanged("IdModuleType");
                }
            }
        }
        private int _idModuleType;
    
        [DataMember]
        public string Repositorykey
        {
            get { return _repositorykey; }
            set
            {
                if (_repositorykey != value)
                {
                    _repositorykey = value;
                    OnPropertyChanged("Repositorykey");
                }
            }
        }
        private string _repositorykey;
    
        [DataMember]
        public string RepositoryType
        {
            get { return _repositoryType; }
            set
            {
                if (_repositoryType != value)
                {
                    _repositoryType = value;
                    OnPropertyChanged("RepositoryType");
                }
            }
        }
        private string _repositoryType;
    
        [DataMember]
        public string classtype
        {
            get { return _classtype; }
            set
            {
                if (_classtype != value)
                {
                    _classtype = value;
                    OnPropertyChanged("classtype");
                }
            }
        }
        private string _classtype;
    
        [DataMember]
        public string lifestyle
        {
            get { return _lifestyle; }
            set
            {
                if (_lifestyle != value)
                {
                    _lifestyle = value;
                    OnPropertyChanged("lifestyle");
                }
            }
        }
        private string _lifestyle;
    
        [DataMember]
        public bool IsActive
        {
            get { return _isActive; }
            set
            {
                if (_isActive != value)
                {
                    _isActive = value;
                    OnPropertyChanged("IsActive");
                }
            }
        }
        private bool _isActive;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TBL_Admin_ModuleType TBL_Admin_ModuleType
        {
            get { return _tBL_Admin_ModuleType; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_ModuleType, value))
                {
                    var previousValue = _tBL_Admin_ModuleType;
                    _tBL_Admin_ModuleType = value;
                    FixupTBL_Admin_ModuleType(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_ModuleType");
                }
            }
        }
        private TBL_Admin_ModuleType _tBL_Admin_ModuleType;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            TBL_Admin_ModuleType = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupTBL_Admin_ModuleType(TBL_Admin_ModuleType previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_Admin_ModuleRepository.Contains(this))
            {
                previousValue.TBL_Admin_ModuleRepository.Remove(this);
            }
    
            if (TBL_Admin_ModuleType != null)
            {
                if (!TBL_Admin_ModuleType.TBL_Admin_ModuleRepository.Contains(this))
                {
                    TBL_Admin_ModuleType.TBL_Admin_ModuleRepository.Add(this);
                }
    
                IdModuleType = TBL_Admin_ModuleType.IdModuleType;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_ModuleType")
                    && (ChangeTracker.OriginalValues["TBL_Admin_ModuleType"] == TBL_Admin_ModuleType))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_ModuleType");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_ModuleType", previousValue);
                }
                if (TBL_Admin_ModuleType != null && !TBL_Admin_ModuleType.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_ModuleType.StartTracking();
                }
            }
        }

        #endregion
    }
}
