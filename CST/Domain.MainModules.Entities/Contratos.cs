//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

using Domain.Core.Entities;

namespace Domain.MainModules.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Bloques))]
    [KnownType(typeof(ComentariosRespuesta))]
    [KnownType(typeof(Empresas))]
    [KnownType(typeof(TBL_Admin_Usuarios))]
    [KnownType(typeof(TiposContrato))]
    [KnownType(typeof(DocumentosContrato))]
    [KnownType(typeof(DocumentosAnexoContrato))]
    [KnownType(typeof(Fases))]
    [KnownType(typeof(LogContratos))]
    [KnownType(typeof(NovedadesContrato))]
    [KnownType(typeof(Radicados))]
    [KnownType(typeof(TBL_ModuloDocumentosAnexos_Carpetas))]
    
    public partial class Contratos: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int IdContrato
        {
            get { return _idContrato; }
            set
            {
                if (_idContrato != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'IdContrato' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _idContrato = value;
                    OnPropertyChanged("IdContrato");
                }
            }
        }
        private int _idContrato;
    
        [DataMember]
        public string NumeroContrato
        {
            get { return _numeroContrato; }
            set
            {
                if (_numeroContrato != value)
                {
                    _numeroContrato = value;
                    OnPropertyChanged("NumeroContrato");
                }
            }
        }
        private string _numeroContrato;
    
        [DataMember]
        public string Nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("Nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public string IdEmpresa
        {
            get { return _idEmpresa; }
            set
            {
                if (_idEmpresa != value)
                {
                    ChangeTracker.RecordOriginalValue("IdEmpresa", _idEmpresa);
                    if (!IsDeserializing)
                    {
                        if (Empresas != null && Empresas.Nit != value)
                        {
                            Empresas = null;
                        }
                    }
                    _idEmpresa = value;
                    OnPropertyChanged("IdEmpresa");
                }
            }
        }
        private string _idEmpresa;
    
        [DataMember]
        public string Descripcion
        {
            get { return _descripcion; }
            set
            {
                if (_descripcion != value)
                {
                    _descripcion = value;
                    OnPropertyChanged("Descripcion");
                }
            }
        }
        private string _descripcion;
    
        [DataMember]
        public System.DateTime FechaFirma
        {
            get { return _fechaFirma; }
            set
            {
                if (_fechaFirma != value)
                {
                    _fechaFirma = value;
                    OnPropertyChanged("FechaFirma");
                }
            }
        }
        private System.DateTime _fechaFirma;
    
        [DataMember]
        public System.DateTime FechaInicio
        {
            get { return _fechaInicio; }
            set
            {
                if (_fechaInicio != value)
                {
                    _fechaInicio = value;
                    OnPropertyChanged("FechaInicio");
                }
            }
        }
        private System.DateTime _fechaInicio;
    
        [DataMember]
        public System.DateTime FechaTerminacion
        {
            get { return _fechaTerminacion; }
            set
            {
                if (_fechaTerminacion != value)
                {
                    _fechaTerminacion = value;
                    OnPropertyChanged("FechaTerminacion");
                }
            }
        }
        private System.DateTime _fechaTerminacion;
    
        [DataMember]
        public string IdTipoContrato
        {
            get { return _idTipoContrato; }
            set
            {
                if (_idTipoContrato != value)
                {
                    ChangeTracker.RecordOriginalValue("IdTipoContrato", _idTipoContrato);
                    if (!IsDeserializing)
                    {
                        if (TiposContrato != null && TiposContrato.IdTipoContrato != value)
                        {
                            TiposContrato = null;
                        }
                    }
                    _idTipoContrato = value;
                    OnPropertyChanged("IdTipoContrato");
                }
            }
        }
        private string _idTipoContrato;
    
        [DataMember]
        public string IdBloque
        {
            get { return _idBloque; }
            set
            {
                if (_idBloque != value)
                {
                    ChangeTracker.RecordOriginalValue("IdBloque", _idBloque);
                    if (!IsDeserializing)
                    {
                        if (Bloques != null && Bloques.IdBloque != value)
                        {
                            Bloques = null;
                        }
                    }
                    _idBloque = value;
                    OnPropertyChanged("IdBloque");
                }
            }
        }
        private string _idBloque;
    
        [DataMember]
        public int IdResponsable
        {
            get { return _idResponsable; }
            set
            {
                if (_idResponsable != value)
                {
                    ChangeTracker.RecordOriginalValue("IdResponsable", _idResponsable);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_Usuarios2 != null && TBL_Admin_Usuarios2.IdUser != value)
                        {
                            TBL_Admin_Usuarios2 = null;
                        }
                    }
                    _idResponsable = value;
                    OnPropertyChanged("IdResponsable");
                }
            }
        }
        private int _idResponsable;
    
        [DataMember]
        public string Estado
        {
            get { return _estado; }
            set
            {
                if (_estado != value)
                {
                    _estado = value;
                    OnPropertyChanged("Estado");
                }
            }
        }
        private string _estado;
    
        [DataMember]
        public Nullable<System.DateTime> FechaInicioSuspension
        {
            get { return _fechaInicioSuspension; }
            set
            {
                if (_fechaInicioSuspension != value)
                {
                    _fechaInicioSuspension = value;
                    OnPropertyChanged("FechaInicioSuspension");
                }
            }
        }
        private Nullable<System.DateTime> _fechaInicioSuspension;
    
        [DataMember]
        public Nullable<short> DiasSuspension
        {
            get { return _diasSuspension; }
            set
            {
                if (_diasSuspension != value)
                {
                    _diasSuspension = value;
                    OnPropertyChanged("DiasSuspension");
                }
            }
        }
        private Nullable<short> _diasSuspension;
    
        [DataMember]
        public Nullable<System.DateTime> FechaTerminacionSuspension
        {
            get { return _fechaTerminacionSuspension; }
            set
            {
                if (_fechaTerminacionSuspension != value)
                {
                    _fechaTerminacionSuspension = value;
                    OnPropertyChanged("FechaTerminacionSuspension");
                }
            }
        }
        private Nullable<System.DateTime> _fechaTerminacionSuspension;
    
        [DataMember]
        public Nullable<bool> SuspensionProgramada
        {
            get { return _suspensionProgramada; }
            set
            {
                if (_suspensionProgramada != value)
                {
                    _suspensionProgramada = value;
                    OnPropertyChanged("SuspensionProgramada");
                }
            }
        }
        private Nullable<bool> _suspensionProgramada;
    
        [DataMember]
        public string ImagenContrato
        {
            get { return _imagenContrato; }
            set
            {
                if (_imagenContrato != value)
                {
                    _imagenContrato = value;
                    OnPropertyChanged("ImagenContrato");
                }
            }
        }
        private string _imagenContrato;
    
        [DataMember]
        public Nullable<decimal> GLatitud
        {
            get { return _gLatitud; }
            set
            {
                if (_gLatitud != value)
                {
                    _gLatitud = value;
                    OnPropertyChanged("GLatitud");
                }
            }
        }
        private Nullable<decimal> _gLatitud;
    
        [DataMember]
        public Nullable<decimal> GLongitud
        {
            get { return _gLongitud; }
            set
            {
                if (_gLongitud != value)
                {
                    _gLongitud = value;
                    OnPropertyChanged("GLongitud");
                }
            }
        }
        private Nullable<decimal> _gLongitud;
    
        [DataMember]
        public bool IsActive
        {
            get { return _isActive; }
            set
            {
                if (_isActive != value)
                {
                    _isActive = value;
                    OnPropertyChanged("IsActive");
                }
            }
        }
        private bool _isActive;
    
        [DataMember]
        public int CreateBy
        {
            get { return _createBy; }
            set
            {
                if (_createBy != value)
                {
                    ChangeTracker.RecordOriginalValue("CreateBy", _createBy);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_Usuarios != null && TBL_Admin_Usuarios.IdUser != value)
                        {
                            TBL_Admin_Usuarios = null;
                        }
                    }
                    _createBy = value;
                    OnPropertyChanged("CreateBy");
                }
            }
        }
        private int _createBy;
    
        [DataMember]
        public System.DateTime CreateOn
        {
            get { return _createOn; }
            set
            {
                if (_createOn != value)
                {
                    _createOn = value;
                    OnPropertyChanged("CreateOn");
                }
            }
        }
        private System.DateTime _createOn;
    
        [DataMember]
        public int ModifiedBy
        {
            get { return _modifiedBy; }
            set
            {
                if (_modifiedBy != value)
                {
                    ChangeTracker.RecordOriginalValue("ModifiedBy", _modifiedBy);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_Usuarios1 != null && TBL_Admin_Usuarios1.IdUser != value)
                        {
                            TBL_Admin_Usuarios1 = null;
                        }
                    }
                    _modifiedBy = value;
                    OnPropertyChanged("ModifiedBy");
                }
            }
        }
        private int _modifiedBy;
    
        [DataMember]
        public System.DateTime ModifiedOn
        {
            get { return _modifiedOn; }
            set
            {
                if (_modifiedOn != value)
                {
                    _modifiedOn = value;
                    OnPropertyChanged("ModifiedOn");
                }
            }
        }
        private System.DateTime _modifiedOn;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public Bloques Bloques
        {
            get { return _bloques; }
            set
            {
                if (!ReferenceEquals(_bloques, value))
                {
                    var previousValue = _bloques;
                    _bloques = value;
                    FixupBloques(previousValue);
                    OnNavigationPropertyChanged("Bloques");
                }
            }
        }
        private Bloques _bloques;
    
        [DataMember]
        public TrackableCollection<ComentariosRespuesta> ComentariosRespuesta
        {
            get
            {
                if (_comentariosRespuesta == null)
                {
                    _comentariosRespuesta = new TrackableCollection<ComentariosRespuesta>();
                    _comentariosRespuesta.CollectionChanged += FixupComentariosRespuesta;
                }
                return _comentariosRespuesta;
            }
            set
            {
                if (!ReferenceEquals(_comentariosRespuesta, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_comentariosRespuesta != null)
                    {
                        _comentariosRespuesta.CollectionChanged -= FixupComentariosRespuesta;
                    }
                    _comentariosRespuesta = value;
                    if (_comentariosRespuesta != null)
                    {
                        _comentariosRespuesta.CollectionChanged += FixupComentariosRespuesta;
                    }
                    OnNavigationPropertyChanged("ComentariosRespuesta");
                }
            }
        }
        private TrackableCollection<ComentariosRespuesta> _comentariosRespuesta;
    
        [DataMember]
        public Empresas Empresas
        {
            get { return _empresas; }
            set
            {
                if (!ReferenceEquals(_empresas, value))
                {
                    var previousValue = _empresas;
                    _empresas = value;
                    FixupEmpresas(previousValue);
                    OnNavigationPropertyChanged("Empresas");
                }
            }
        }
        private Empresas _empresas;
    
        [DataMember]
        public TBL_Admin_Usuarios TBL_Admin_Usuarios
        {
            get { return _tBL_Admin_Usuarios; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios, value))
                {
                    var previousValue = _tBL_Admin_Usuarios;
                    _tBL_Admin_Usuarios = value;
                    FixupTBL_Admin_Usuarios(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios");
                }
            }
        }
        private TBL_Admin_Usuarios _tBL_Admin_Usuarios;
    
        [DataMember]
        public TBL_Admin_Usuarios TBL_Admin_Usuarios1
        {
            get { return _tBL_Admin_Usuarios1; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios1, value))
                {
                    var previousValue = _tBL_Admin_Usuarios1;
                    _tBL_Admin_Usuarios1 = value;
                    FixupTBL_Admin_Usuarios1(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios1");
                }
            }
        }
        private TBL_Admin_Usuarios _tBL_Admin_Usuarios1;
    
        [DataMember]
        public TBL_Admin_Usuarios TBL_Admin_Usuarios2
        {
            get { return _tBL_Admin_Usuarios2; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios2, value))
                {
                    var previousValue = _tBL_Admin_Usuarios2;
                    _tBL_Admin_Usuarios2 = value;
                    FixupTBL_Admin_Usuarios2(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios2");
                }
            }
        }
        private TBL_Admin_Usuarios _tBL_Admin_Usuarios2;
    
        [DataMember]
        public TiposContrato TiposContrato
        {
            get { return _tiposContrato; }
            set
            {
                if (!ReferenceEquals(_tiposContrato, value))
                {
                    var previousValue = _tiposContrato;
                    _tiposContrato = value;
                    FixupTiposContrato(previousValue);
                    OnNavigationPropertyChanged("TiposContrato");
                }
            }
        }
        private TiposContrato _tiposContrato;
    
        [DataMember]
        public TrackableCollection<DocumentosContrato> DocumentosContrato
        {
            get
            {
                if (_documentosContrato == null)
                {
                    _documentosContrato = new TrackableCollection<DocumentosContrato>();
                    _documentosContrato.CollectionChanged += FixupDocumentosContrato;
                }
                return _documentosContrato;
            }
            set
            {
                if (!ReferenceEquals(_documentosContrato, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_documentosContrato != null)
                    {
                        _documentosContrato.CollectionChanged -= FixupDocumentosContrato;
                    }
                    _documentosContrato = value;
                    if (_documentosContrato != null)
                    {
                        _documentosContrato.CollectionChanged += FixupDocumentosContrato;
                    }
                    OnNavigationPropertyChanged("DocumentosContrato");
                }
            }
        }
        private TrackableCollection<DocumentosContrato> _documentosContrato;
    
        [DataMember]
        public TrackableCollection<DocumentosAnexoContrato> DocumentosAnexoContrato
        {
            get
            {
                if (_documentosAnexoContrato == null)
                {
                    _documentosAnexoContrato = new TrackableCollection<DocumentosAnexoContrato>();
                    _documentosAnexoContrato.CollectionChanged += FixupDocumentosAnexoContrato;
                }
                return _documentosAnexoContrato;
            }
            set
            {
                if (!ReferenceEquals(_documentosAnexoContrato, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_documentosAnexoContrato != null)
                    {
                        _documentosAnexoContrato.CollectionChanged -= FixupDocumentosAnexoContrato;
                    }
                    _documentosAnexoContrato = value;
                    if (_documentosAnexoContrato != null)
                    {
                        _documentosAnexoContrato.CollectionChanged += FixupDocumentosAnexoContrato;
                    }
                    OnNavigationPropertyChanged("DocumentosAnexoContrato");
                }
            }
        }
        private TrackableCollection<DocumentosAnexoContrato> _documentosAnexoContrato;
    
        [DataMember]
        public TrackableCollection<DocumentosContrato> DocumentosContrato1
        {
            get
            {
                if (_documentosContrato1 == null)
                {
                    _documentosContrato1 = new TrackableCollection<DocumentosContrato>();
                    _documentosContrato1.CollectionChanged += FixupDocumentosContrato1;
                }
                return _documentosContrato1;
            }
            set
            {
                if (!ReferenceEquals(_documentosContrato1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_documentosContrato1 != null)
                    {
                        _documentosContrato1.CollectionChanged -= FixupDocumentosContrato1;
                    }
                    _documentosContrato1 = value;
                    if (_documentosContrato1 != null)
                    {
                        _documentosContrato1.CollectionChanged += FixupDocumentosContrato1;
                    }
                    OnNavigationPropertyChanged("DocumentosContrato1");
                }
            }
        }
        private TrackableCollection<DocumentosContrato> _documentosContrato1;
    
        [DataMember]
        public TrackableCollection<Fases> Fases
        {
            get
            {
                if (_fases == null)
                {
                    _fases = new TrackableCollection<Fases>();
                    _fases.CollectionChanged += FixupFases;
                }
                return _fases;
            }
            set
            {
                if (!ReferenceEquals(_fases, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_fases != null)
                    {
                        _fases.CollectionChanged -= FixupFases;
                    }
                    _fases = value;
                    if (_fases != null)
                    {
                        _fases.CollectionChanged += FixupFases;
                    }
                    OnNavigationPropertyChanged("Fases");
                }
            }
        }
        private TrackableCollection<Fases> _fases;
    
        [DataMember]
        public TrackableCollection<LogContratos> LogContratos
        {
            get
            {
                if (_logContratos == null)
                {
                    _logContratos = new TrackableCollection<LogContratos>();
                    _logContratos.CollectionChanged += FixupLogContratos;
                }
                return _logContratos;
            }
            set
            {
                if (!ReferenceEquals(_logContratos, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_logContratos != null)
                    {
                        _logContratos.CollectionChanged -= FixupLogContratos;
                    }
                    _logContratos = value;
                    if (_logContratos != null)
                    {
                        _logContratos.CollectionChanged += FixupLogContratos;
                    }
                    OnNavigationPropertyChanged("LogContratos");
                }
            }
        }
        private TrackableCollection<LogContratos> _logContratos;
    
        [DataMember]
        public TrackableCollection<NovedadesContrato> NovedadesContrato
        {
            get
            {
                if (_novedadesContrato == null)
                {
                    _novedadesContrato = new TrackableCollection<NovedadesContrato>();
                    _novedadesContrato.CollectionChanged += FixupNovedadesContrato;
                }
                return _novedadesContrato;
            }
            set
            {
                if (!ReferenceEquals(_novedadesContrato, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_novedadesContrato != null)
                    {
                        _novedadesContrato.CollectionChanged -= FixupNovedadesContrato;
                    }
                    _novedadesContrato = value;
                    if (_novedadesContrato != null)
                    {
                        _novedadesContrato.CollectionChanged += FixupNovedadesContrato;
                    }
                    OnNavigationPropertyChanged("NovedadesContrato");
                }
            }
        }
        private TrackableCollection<NovedadesContrato> _novedadesContrato;
    
        [DataMember]
        public TrackableCollection<Radicados> Radicados
        {
            get
            {
                if (_radicados == null)
                {
                    _radicados = new TrackableCollection<Radicados>();
                    _radicados.CollectionChanged += FixupRadicados;
                }
                return _radicados;
            }
            set
            {
                if (!ReferenceEquals(_radicados, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_radicados != null)
                    {
                        _radicados.CollectionChanged -= FixupRadicados;
                    }
                    _radicados = value;
                    if (_radicados != null)
                    {
                        _radicados.CollectionChanged += FixupRadicados;
                    }
                    OnNavigationPropertyChanged("Radicados");
                }
            }
        }
        private TrackableCollection<Radicados> _radicados;
    
        [DataMember]
        public TrackableCollection<TBL_ModuloDocumentosAnexos_Carpetas> TBL_ModuloDocumentosAnexos_Carpetas
        {
            get
            {
                if (_tBL_ModuloDocumentosAnexos_Carpetas == null)
                {
                    _tBL_ModuloDocumentosAnexos_Carpetas = new TrackableCollection<TBL_ModuloDocumentosAnexos_Carpetas>();
                    _tBL_ModuloDocumentosAnexos_Carpetas.CollectionChanged += FixupTBL_ModuloDocumentosAnexos_Carpetas;
                }
                return _tBL_ModuloDocumentosAnexos_Carpetas;
            }
            set
            {
                if (!ReferenceEquals(_tBL_ModuloDocumentosAnexos_Carpetas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tBL_ModuloDocumentosAnexos_Carpetas != null)
                    {
                        _tBL_ModuloDocumentosAnexos_Carpetas.CollectionChanged -= FixupTBL_ModuloDocumentosAnexos_Carpetas;
                    }
                    _tBL_ModuloDocumentosAnexos_Carpetas = value;
                    if (_tBL_ModuloDocumentosAnexos_Carpetas != null)
                    {
                        _tBL_ModuloDocumentosAnexos_Carpetas.CollectionChanged += FixupTBL_ModuloDocumentosAnexos_Carpetas;
                    }
                    OnNavigationPropertyChanged("TBL_ModuloDocumentosAnexos_Carpetas");
                }
            }
        }
        private TrackableCollection<TBL_ModuloDocumentosAnexos_Carpetas> _tBL_ModuloDocumentosAnexos_Carpetas;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Bloques = null;
            ComentariosRespuesta.Clear();
            Empresas = null;
            TBL_Admin_Usuarios = null;
            TBL_Admin_Usuarios1 = null;
            TBL_Admin_Usuarios2 = null;
            TiposContrato = null;
            DocumentosContrato.Clear();
            DocumentosAnexoContrato.Clear();
            DocumentosContrato1.Clear();
            Fases.Clear();
            LogContratos.Clear();
            NovedadesContrato.Clear();
            Radicados.Clear();
            TBL_ModuloDocumentosAnexos_Carpetas.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupBloques(Bloques previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Contratos.Contains(this))
            {
                previousValue.Contratos.Remove(this);
            }
    
            if (Bloques != null)
            {
                if (!Bloques.Contratos.Contains(this))
                {
                    Bloques.Contratos.Add(this);
                }
    
                IdBloque = Bloques.IdBloque;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Bloques")
                    && (ChangeTracker.OriginalValues["Bloques"] == Bloques))
                {
                    ChangeTracker.OriginalValues.Remove("Bloques");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Bloques", previousValue);
                }
                if (Bloques != null && !Bloques.ChangeTracker.ChangeTrackingEnabled)
                {
                    Bloques.StartTracking();
                }
            }
        }
    
        private void FixupEmpresas(Empresas previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Contratos.Contains(this))
            {
                previousValue.Contratos.Remove(this);
            }
    
            if (Empresas != null)
            {
                if (!Empresas.Contratos.Contains(this))
                {
                    Empresas.Contratos.Add(this);
                }
    
                IdEmpresa = Empresas.Nit;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Empresas")
                    && (ChangeTracker.OriginalValues["Empresas"] == Empresas))
                {
                    ChangeTracker.OriginalValues.Remove("Empresas");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Empresas", previousValue);
                }
                if (Empresas != null && !Empresas.ChangeTracker.ChangeTrackingEnabled)
                {
                    Empresas.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_Usuarios(TBL_Admin_Usuarios previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Contratos.Contains(this))
            {
                previousValue.Contratos.Remove(this);
            }
    
            if (TBL_Admin_Usuarios != null)
            {
                if (!TBL_Admin_Usuarios.Contratos.Contains(this))
                {
                    TBL_Admin_Usuarios.Contratos.Add(this);
                }
    
                CreateBy = TBL_Admin_Usuarios.IdUser;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_Usuarios")
                    && (ChangeTracker.OriginalValues["TBL_Admin_Usuarios"] == TBL_Admin_Usuarios))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_Usuarios");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_Usuarios", previousValue);
                }
                if (TBL_Admin_Usuarios != null && !TBL_Admin_Usuarios.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_Usuarios.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_Usuarios1(TBL_Admin_Usuarios previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Contratos1.Contains(this))
            {
                previousValue.Contratos1.Remove(this);
            }
    
            if (TBL_Admin_Usuarios1 != null)
            {
                if (!TBL_Admin_Usuarios1.Contratos1.Contains(this))
                {
                    TBL_Admin_Usuarios1.Contratos1.Add(this);
                }
    
                ModifiedBy = TBL_Admin_Usuarios1.IdUser;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_Usuarios1")
                    && (ChangeTracker.OriginalValues["TBL_Admin_Usuarios1"] == TBL_Admin_Usuarios1))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_Usuarios1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_Usuarios1", previousValue);
                }
                if (TBL_Admin_Usuarios1 != null && !TBL_Admin_Usuarios1.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_Usuarios1.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_Usuarios2(TBL_Admin_Usuarios previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Contratos2.Contains(this))
            {
                previousValue.Contratos2.Remove(this);
            }
    
            if (TBL_Admin_Usuarios2 != null)
            {
                if (!TBL_Admin_Usuarios2.Contratos2.Contains(this))
                {
                    TBL_Admin_Usuarios2.Contratos2.Add(this);
                }
    
                IdResponsable = TBL_Admin_Usuarios2.IdUser;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_Usuarios2")
                    && (ChangeTracker.OriginalValues["TBL_Admin_Usuarios2"] == TBL_Admin_Usuarios2))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_Usuarios2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_Usuarios2", previousValue);
                }
                if (TBL_Admin_Usuarios2 != null && !TBL_Admin_Usuarios2.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_Usuarios2.StartTracking();
                }
            }
        }
    
        private void FixupTiposContrato(TiposContrato previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Contratos.Contains(this))
            {
                previousValue.Contratos.Remove(this);
            }
    
            if (TiposContrato != null)
            {
                if (!TiposContrato.Contratos.Contains(this))
                {
                    TiposContrato.Contratos.Add(this);
                }
    
                IdTipoContrato = TiposContrato.IdTipoContrato;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TiposContrato")
                    && (ChangeTracker.OriginalValues["TiposContrato"] == TiposContrato))
                {
                    ChangeTracker.OriginalValues.Remove("TiposContrato");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TiposContrato", previousValue);
                }
                if (TiposContrato != null && !TiposContrato.ChangeTracker.ChangeTrackingEnabled)
                {
                    TiposContrato.StartTracking();
                }
            }
        }
    
        private void FixupComentariosRespuesta(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ComentariosRespuesta item in e.NewItems)
                {
                    item.Contratos = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ComentariosRespuesta", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ComentariosRespuesta item in e.OldItems)
                {
                    if (ReferenceEquals(item.Contratos, this))
                    {
                        item.Contratos = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ComentariosRespuesta", item);
                    }
                }
            }
        }
    
        private void FixupDocumentosContrato(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DocumentosContrato item in e.NewItems)
                {
                    item.Contratos = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DocumentosContrato", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DocumentosContrato item in e.OldItems)
                {
                    if (ReferenceEquals(item.Contratos, this))
                    {
                        item.Contratos = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DocumentosContrato", item);
                    }
                }
            }
        }
    
        private void FixupDocumentosAnexoContrato(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DocumentosAnexoContrato item in e.NewItems)
                {
                    item.Contratos = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DocumentosAnexoContrato", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DocumentosAnexoContrato item in e.OldItems)
                {
                    if (ReferenceEquals(item.Contratos, this))
                    {
                        item.Contratos = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DocumentosAnexoContrato", item);
                    }
                }
            }
        }
    
        private void FixupDocumentosContrato1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DocumentosContrato item in e.NewItems)
                {
                    item.Contratos1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DocumentosContrato1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DocumentosContrato item in e.OldItems)
                {
                    if (ReferenceEquals(item.Contratos1, this))
                    {
                        item.Contratos1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DocumentosContrato1", item);
                    }
                }
            }
        }
    
        private void FixupFases(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Fases item in e.NewItems)
                {
                    item.Contratos = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Fases", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Fases item in e.OldItems)
                {
                    if (ReferenceEquals(item.Contratos, this))
                    {
                        item.Contratos = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Fases", item);
                    }
                }
            }
        }
    
        private void FixupLogContratos(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LogContratos item in e.NewItems)
                {
                    item.Contratos = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LogContratos", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LogContratos item in e.OldItems)
                {
                    if (ReferenceEquals(item.Contratos, this))
                    {
                        item.Contratos = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LogContratos", item);
                    }
                }
            }
        }
    
        private void FixupNovedadesContrato(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NovedadesContrato item in e.NewItems)
                {
                    item.Contratos = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NovedadesContrato", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NovedadesContrato item in e.OldItems)
                {
                    if (ReferenceEquals(item.Contratos, this))
                    {
                        item.Contratos = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NovedadesContrato", item);
                    }
                }
            }
        }
    
        private void FixupRadicados(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Radicados item in e.NewItems)
                {
                    item.Contratos = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Radicados", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Radicados item in e.OldItems)
                {
                    if (ReferenceEquals(item.Contratos, this))
                    {
                        item.Contratos = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Radicados", item);
                    }
                }
            }
        }
    
        private void FixupTBL_ModuloDocumentosAnexos_Carpetas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TBL_ModuloDocumentosAnexos_Carpetas item in e.NewItems)
                {
                    item.Contratos = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TBL_ModuloDocumentosAnexos_Carpetas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TBL_ModuloDocumentosAnexos_Carpetas item in e.OldItems)
                {
                    if (ReferenceEquals(item.Contratos, this))
                    {
                        item.Contratos = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TBL_ModuloDocumentosAnexos_Carpetas", item);
                    }
                }
            }
        }

        #endregion
    }
}
