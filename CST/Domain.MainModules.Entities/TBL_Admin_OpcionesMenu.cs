//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

using Domain.Core.Entities;

namespace Domain.MainModules.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(TBL_Admin_Modulos))]
    [KnownType(typeof(TBL_Admin_OpcionesMenu))]
    [KnownType(typeof(TBL_Admin_Roles))]
    
    public partial class TBL_Admin_OpcionesMenu: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int IdOpcionMenu
        {
            get { return _idOpcionMenu; }
            set
            {
                if (_idOpcionMenu != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'IdOpcionMenu' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _idOpcionMenu = value;
                    OnPropertyChanged("IdOpcionMenu");
                }
            }
        }
        private int _idOpcionMenu;
    
        [DataMember]
        public Nullable<int> IdopcionPadre
        {
            get { return _idopcionPadre; }
            set
            {
                if (_idopcionPadre != value)
                {
                    ChangeTracker.RecordOriginalValue("IdopcionPadre", _idopcionPadre);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_OpcionesMenu2 != null && TBL_Admin_OpcionesMenu2.IdOpcionMenu != value)
                        {
                            TBL_Admin_OpcionesMenu2 = null;
                        }
                    }
                    _idopcionPadre = value;
                    OnPropertyChanged("IdopcionPadre");
                }
            }
        }
        private Nullable<int> _idopcionPadre;
    
        [DataMember]
        public Nullable<int> AplicationId
        {
            get { return _aplicationId; }
            set
            {
                if (_aplicationId != value)
                {
                    ChangeTracker.RecordOriginalValue("AplicationId", _aplicationId);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_Modulos != null && TBL_Admin_Modulos.IdModulo != value)
                        {
                            TBL_Admin_Modulos = null;
                        }
                    }
                    _aplicationId = value;
                    OnPropertyChanged("AplicationId");
                }
            }
        }
        private Nullable<int> _aplicationId;
    
        [DataMember]
        public string TituloOpcion
        {
            get { return _tituloOpcion; }
            set
            {
                if (_tituloOpcion != value)
                {
                    _tituloOpcion = value;
                    OnPropertyChanged("TituloOpcion");
                }
            }
        }
        private string _tituloOpcion;
    
        [DataMember]
        public int Posicion
        {
            get { return _posicion; }
            set
            {
                if (_posicion != value)
                {
                    _posicion = value;
                    OnPropertyChanged("Posicion");
                }
            }
        }
        private int _posicion;
    
        [DataMember]
        public bool ShowSecondMenu
        {
            get { return _showSecondMenu; }
            set
            {
                if (_showSecondMenu != value)
                {
                    _showSecondMenu = value;
                    OnPropertyChanged("ShowSecondMenu");
                }
            }
        }
        private bool _showSecondMenu;
    
        [DataMember]
        public bool ShowMainMenu
        {
            get { return _showMainMenu; }
            set
            {
                if (_showMainMenu != value)
                {
                    _showMainMenu = value;
                    OnPropertyChanged("ShowMainMenu");
                }
            }
        }
        private bool _showMainMenu;
    
        [DataMember]
        public bool Activo
        {
            get { return _activo; }
            set
            {
                if (_activo != value)
                {
                    _activo = value;
                    OnPropertyChanged("Activo");
                }
            }
        }
        private bool _activo;
    
        [DataMember]
        public string LinkUrl
        {
            get { return _linkUrl; }
            set
            {
                if (_linkUrl != value)
                {
                    _linkUrl = value;
                    OnPropertyChanged("LinkUrl");
                }
            }
        }
        private string _linkUrl;
    
        [DataMember]
        public string Icono
        {
            get { return _icono; }
            set
            {
                if (_icono != value)
                {
                    _icono = value;
                    OnPropertyChanged("Icono");
                }
            }
        }
        private string _icono;
    
        [DataMember]
        public string CreateBy
        {
            get { return _createBy; }
            set
            {
                if (_createBy != value)
                {
                    _createBy = value;
                    OnPropertyChanged("CreateBy");
                }
            }
        }
        private string _createBy;
    
        [DataMember]
        public Nullable<System.DateTime> CreateOn
        {
            get { return _createOn; }
            set
            {
                if (_createOn != value)
                {
                    _createOn = value;
                    OnPropertyChanged("CreateOn");
                }
            }
        }
        private Nullable<System.DateTime> _createOn;
    
        [DataMember]
        public string ModifiedBy
        {
            get { return _modifiedBy; }
            set
            {
                if (_modifiedBy != value)
                {
                    _modifiedBy = value;
                    OnPropertyChanged("ModifiedBy");
                }
            }
        }
        private string _modifiedBy;
    
        [DataMember]
        public Nullable<System.DateTime> ModifiedOn
        {
            get { return _modifiedOn; }
            set
            {
                if (_modifiedOn != value)
                {
                    _modifiedOn = value;
                    OnPropertyChanged("ModifiedOn");
                }
            }
        }
        private Nullable<System.DateTime> _modifiedOn;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TBL_Admin_Modulos TBL_Admin_Modulos
        {
            get { return _tBL_Admin_Modulos; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Modulos, value))
                {
                    var previousValue = _tBL_Admin_Modulos;
                    _tBL_Admin_Modulos = value;
                    FixupTBL_Admin_Modulos(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_Modulos");
                }
            }
        }
        private TBL_Admin_Modulos _tBL_Admin_Modulos;
    
        [DataMember]
        public TrackableCollection<TBL_Admin_OpcionesMenu> TBL_Admin_OpcionesMenu1
        {
            get
            {
                if (_tBL_Admin_OpcionesMenu1 == null)
                {
                    _tBL_Admin_OpcionesMenu1 = new TrackableCollection<TBL_Admin_OpcionesMenu>();
                    _tBL_Admin_OpcionesMenu1.CollectionChanged += FixupTBL_Admin_OpcionesMenu1;
                }
                return _tBL_Admin_OpcionesMenu1;
            }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_OpcionesMenu1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tBL_Admin_OpcionesMenu1 != null)
                    {
                        _tBL_Admin_OpcionesMenu1.CollectionChanged -= FixupTBL_Admin_OpcionesMenu1;
                    }
                    _tBL_Admin_OpcionesMenu1 = value;
                    if (_tBL_Admin_OpcionesMenu1 != null)
                    {
                        _tBL_Admin_OpcionesMenu1.CollectionChanged += FixupTBL_Admin_OpcionesMenu1;
                    }
                    OnNavigationPropertyChanged("TBL_Admin_OpcionesMenu1");
                }
            }
        }
        private TrackableCollection<TBL_Admin_OpcionesMenu> _tBL_Admin_OpcionesMenu1;
    
        [DataMember]
        public TBL_Admin_OpcionesMenu TBL_Admin_OpcionesMenu2
        {
            get { return _tBL_Admin_OpcionesMenu2; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_OpcionesMenu2, value))
                {
                    var previousValue = _tBL_Admin_OpcionesMenu2;
                    _tBL_Admin_OpcionesMenu2 = value;
                    FixupTBL_Admin_OpcionesMenu2(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_OpcionesMenu2");
                }
            }
        }
        private TBL_Admin_OpcionesMenu _tBL_Admin_OpcionesMenu2;
    
        [DataMember]
        public TrackableCollection<TBL_Admin_Roles> TBL_Admin_Roles
        {
            get
            {
                if (_tBL_Admin_Roles == null)
                {
                    _tBL_Admin_Roles = new TrackableCollection<TBL_Admin_Roles>();
                    _tBL_Admin_Roles.CollectionChanged += FixupTBL_Admin_Roles;
                }
                return _tBL_Admin_Roles;
            }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Roles, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tBL_Admin_Roles != null)
                    {
                        _tBL_Admin_Roles.CollectionChanged -= FixupTBL_Admin_Roles;
                    }
                    _tBL_Admin_Roles = value;
                    if (_tBL_Admin_Roles != null)
                    {
                        _tBL_Admin_Roles.CollectionChanged += FixupTBL_Admin_Roles;
                    }
                    OnNavigationPropertyChanged("TBL_Admin_Roles");
                }
            }
        }
        private TrackableCollection<TBL_Admin_Roles> _tBL_Admin_Roles;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            TBL_Admin_Modulos = null;
            TBL_Admin_OpcionesMenu1.Clear();
            TBL_Admin_OpcionesMenu2 = null;
            TBL_Admin_Roles.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupTBL_Admin_Modulos(TBL_Admin_Modulos previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_Admin_OpcionesMenu.Contains(this))
            {
                previousValue.TBL_Admin_OpcionesMenu.Remove(this);
            }
    
            if (TBL_Admin_Modulos != null)
            {
                if (!TBL_Admin_Modulos.TBL_Admin_OpcionesMenu.Contains(this))
                {
                    TBL_Admin_Modulos.TBL_Admin_OpcionesMenu.Add(this);
                }
    
                AplicationId = TBL_Admin_Modulos.IdModulo;
            }
            else if (!skipKeys)
            {
                AplicationId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_Modulos")
                    && (ChangeTracker.OriginalValues["TBL_Admin_Modulos"] == TBL_Admin_Modulos))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_Modulos");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_Modulos", previousValue);
                }
                if (TBL_Admin_Modulos != null && !TBL_Admin_Modulos.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_Modulos.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_OpcionesMenu2(TBL_Admin_OpcionesMenu previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_Admin_OpcionesMenu1.Contains(this))
            {
                previousValue.TBL_Admin_OpcionesMenu1.Remove(this);
            }
    
            if (TBL_Admin_OpcionesMenu2 != null)
            {
                if (!TBL_Admin_OpcionesMenu2.TBL_Admin_OpcionesMenu1.Contains(this))
                {
                    TBL_Admin_OpcionesMenu2.TBL_Admin_OpcionesMenu1.Add(this);
                }
    
                IdopcionPadre = TBL_Admin_OpcionesMenu2.IdOpcionMenu;
            }
            else if (!skipKeys)
            {
                IdopcionPadre = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_OpcionesMenu2")
                    && (ChangeTracker.OriginalValues["TBL_Admin_OpcionesMenu2"] == TBL_Admin_OpcionesMenu2))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_OpcionesMenu2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_OpcionesMenu2", previousValue);
                }
                if (TBL_Admin_OpcionesMenu2 != null && !TBL_Admin_OpcionesMenu2.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_OpcionesMenu2.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_OpcionesMenu1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TBL_Admin_OpcionesMenu item in e.NewItems)
                {
                    item.TBL_Admin_OpcionesMenu2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TBL_Admin_OpcionesMenu1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TBL_Admin_OpcionesMenu item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_OpcionesMenu2, this))
                    {
                        item.TBL_Admin_OpcionesMenu2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TBL_Admin_OpcionesMenu1", item);
                    }
                }
            }
        }
    
        private void FixupTBL_Admin_Roles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TBL_Admin_Roles item in e.NewItems)
                {
                    if (!item.TBL_Admin_OpcionesMenu.Contains(this))
                    {
                        item.TBL_Admin_OpcionesMenu.Add(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TBL_Admin_Roles", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TBL_Admin_Roles item in e.OldItems)
                {
                    if (item.TBL_Admin_OpcionesMenu.Contains(this))
                    {
                        item.TBL_Admin_OpcionesMenu.Remove(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TBL_Admin_Roles", item);
                    }
                }
            }
        }

        #endregion
    }
}
