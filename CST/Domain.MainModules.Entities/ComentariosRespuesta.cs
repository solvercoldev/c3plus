//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

using Domain.Core.Entities;

namespace Domain.MainModules.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(AnexosComentarioRespuesta))]
    [KnownType(typeof(ComentariosRespuesta))]
    [KnownType(typeof(Contratos))]
    [KnownType(typeof(TBL_Admin_Usuarios))]
    
    public partial class ComentariosRespuesta: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public decimal IdComentario
        {
            get { return _idComentario; }
            set
            {
                if (_idComentario != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'IdComentario' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _idComentario = value;
                    OnPropertyChanged("IdComentario");
                }
            }
        }
        private decimal _idComentario;
    
        [DataMember]
        public int IdContrato
        {
            get { return _idContrato; }
            set
            {
                if (_idContrato != value)
                {
                    ChangeTracker.RecordOriginalValue("IdContrato", _idContrato);
                    if (!IsDeserializing)
                    {
                        if (Contratos != null && Contratos.IdContrato != value)
                        {
                            Contratos = null;
                        }
                    }
                    _idContrato = value;
                    OnPropertyChanged("IdContrato");
                }
            }
        }
        private int _idContrato;
    
        [DataMember]
        public string Asunto
        {
            get { return _asunto; }
            set
            {
                if (_asunto != value)
                {
                    _asunto = value;
                    OnPropertyChanged("Asunto");
                }
            }
        }
        private string _asunto;
    
        [DataMember]
        public string Comentario
        {
            get { return _comentario; }
            set
            {
                if (_comentario != value)
                {
                    _comentario = value;
                    OnPropertyChanged("Comentario");
                }
            }
        }
        private string _comentario;
    
        [DataMember]
        public int IdUsuarioDestino
        {
            get { return _idUsuarioDestino; }
            set
            {
                if (_idUsuarioDestino != value)
                {
                    ChangeTracker.RecordOriginalValue("IdUsuarioDestino", _idUsuarioDestino);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_Usuarios != null && TBL_Admin_Usuarios.IdUser != value)
                        {
                            TBL_Admin_Usuarios = null;
                        }
                    }
                    _idUsuarioDestino = value;
                    OnPropertyChanged("IdUsuarioDestino");
                }
            }
        }
        private int _idUsuarioDestino;
    
        [DataMember]
        public Nullable<decimal> IdComentarioRelacionado
        {
            get { return _idComentarioRelacionado; }
            set
            {
                if (_idComentarioRelacionado != value)
                {
                    ChangeTracker.RecordOriginalValue("IdComentarioRelacionado", _idComentarioRelacionado);
                    if (!IsDeserializing)
                    {
                        if (ComentariosRespuesta2 != null && ComentariosRespuesta2.IdComentario != value)
                        {
                            ComentariosRespuesta2 = null;
                        }
                    }
                    _idComentarioRelacionado = value;
                    OnPropertyChanged("IdComentarioRelacionado");
                }
            }
        }
        private Nullable<decimal> _idComentarioRelacionado;
    
        [DataMember]
        public bool IsActive
        {
            get { return _isActive; }
            set
            {
                if (_isActive != value)
                {
                    _isActive = value;
                    OnPropertyChanged("IsActive");
                }
            }
        }
        private bool _isActive;
    
        [DataMember]
        public int CreateBy
        {
            get { return _createBy; }
            set
            {
                if (_createBy != value)
                {
                    ChangeTracker.RecordOriginalValue("CreateBy", _createBy);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_Usuarios1 != null && TBL_Admin_Usuarios1.IdUser != value)
                        {
                            TBL_Admin_Usuarios1 = null;
                        }
                    }
                    _createBy = value;
                    OnPropertyChanged("CreateBy");
                }
            }
        }
        private int _createBy;
    
        [DataMember]
        public System.DateTime CreateOn
        {
            get { return _createOn; }
            set
            {
                if (_createOn != value)
                {
                    _createOn = value;
                    OnPropertyChanged("CreateOn");
                }
            }
        }
        private System.DateTime _createOn;
    
        [DataMember]
        public int ModifiedBy
        {
            get { return _modifiedBy; }
            set
            {
                if (_modifiedBy != value)
                {
                    ChangeTracker.RecordOriginalValue("ModifiedBy", _modifiedBy);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_Usuarios2 != null && TBL_Admin_Usuarios2.IdUser != value)
                        {
                            TBL_Admin_Usuarios2 = null;
                        }
                    }
                    _modifiedBy = value;
                    OnPropertyChanged("ModifiedBy");
                }
            }
        }
        private int _modifiedBy;
    
        [DataMember]
        public System.DateTime ModifiedOn
        {
            get { return _modifiedOn; }
            set
            {
                if (_modifiedOn != value)
                {
                    _modifiedOn = value;
                    OnPropertyChanged("ModifiedOn");
                }
            }
        }
        private System.DateTime _modifiedOn;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<AnexosComentarioRespuesta> AnexosComentarioRespuesta
        {
            get
            {
                if (_anexosComentarioRespuesta == null)
                {
                    _anexosComentarioRespuesta = new TrackableCollection<AnexosComentarioRespuesta>();
                    _anexosComentarioRespuesta.CollectionChanged += FixupAnexosComentarioRespuesta;
                }
                return _anexosComentarioRespuesta;
            }
            set
            {
                if (!ReferenceEquals(_anexosComentarioRespuesta, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_anexosComentarioRespuesta != null)
                    {
                        _anexosComentarioRespuesta.CollectionChanged -= FixupAnexosComentarioRespuesta;
                    }
                    _anexosComentarioRespuesta = value;
                    if (_anexosComentarioRespuesta != null)
                    {
                        _anexosComentarioRespuesta.CollectionChanged += FixupAnexosComentarioRespuesta;
                    }
                    OnNavigationPropertyChanged("AnexosComentarioRespuesta");
                }
            }
        }
        private TrackableCollection<AnexosComentarioRespuesta> _anexosComentarioRespuesta;
    
        [DataMember]
        public TrackableCollection<ComentariosRespuesta> ComentariosRespuesta1
        {
            get
            {
                if (_comentariosRespuesta1 == null)
                {
                    _comentariosRespuesta1 = new TrackableCollection<ComentariosRespuesta>();
                    _comentariosRespuesta1.CollectionChanged += FixupComentariosRespuesta1;
                }
                return _comentariosRespuesta1;
            }
            set
            {
                if (!ReferenceEquals(_comentariosRespuesta1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_comentariosRespuesta1 != null)
                    {
                        _comentariosRespuesta1.CollectionChanged -= FixupComentariosRespuesta1;
                    }
                    _comentariosRespuesta1 = value;
                    if (_comentariosRespuesta1 != null)
                    {
                        _comentariosRespuesta1.CollectionChanged += FixupComentariosRespuesta1;
                    }
                    OnNavigationPropertyChanged("ComentariosRespuesta1");
                }
            }
        }
        private TrackableCollection<ComentariosRespuesta> _comentariosRespuesta1;
    
        [DataMember]
        public ComentariosRespuesta ComentariosRespuesta2
        {
            get { return _comentariosRespuesta2; }
            set
            {
                if (!ReferenceEquals(_comentariosRespuesta2, value))
                {
                    var previousValue = _comentariosRespuesta2;
                    _comentariosRespuesta2 = value;
                    FixupComentariosRespuesta2(previousValue);
                    OnNavigationPropertyChanged("ComentariosRespuesta2");
                }
            }
        }
        private ComentariosRespuesta _comentariosRespuesta2;
    
        [DataMember]
        public Contratos Contratos
        {
            get { return _contratos; }
            set
            {
                if (!ReferenceEquals(_contratos, value))
                {
                    var previousValue = _contratos;
                    _contratos = value;
                    FixupContratos(previousValue);
                    OnNavigationPropertyChanged("Contratos");
                }
            }
        }
        private Contratos _contratos;
    
        [DataMember]
        public TBL_Admin_Usuarios TBL_Admin_Usuarios
        {
            get { return _tBL_Admin_Usuarios; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios, value))
                {
                    var previousValue = _tBL_Admin_Usuarios;
                    _tBL_Admin_Usuarios = value;
                    FixupTBL_Admin_Usuarios(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios");
                }
            }
        }
        private TBL_Admin_Usuarios _tBL_Admin_Usuarios;
    
        [DataMember]
        public TBL_Admin_Usuarios TBL_Admin_Usuarios1
        {
            get { return _tBL_Admin_Usuarios1; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios1, value))
                {
                    var previousValue = _tBL_Admin_Usuarios1;
                    _tBL_Admin_Usuarios1 = value;
                    FixupTBL_Admin_Usuarios1(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios1");
                }
            }
        }
        private TBL_Admin_Usuarios _tBL_Admin_Usuarios1;
    
        [DataMember]
        public TBL_Admin_Usuarios TBL_Admin_Usuarios2
        {
            get { return _tBL_Admin_Usuarios2; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios2, value))
                {
                    var previousValue = _tBL_Admin_Usuarios2;
                    _tBL_Admin_Usuarios2 = value;
                    FixupTBL_Admin_Usuarios2(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios2");
                }
            }
        }
        private TBL_Admin_Usuarios _tBL_Admin_Usuarios2;
    
        [DataMember]
        public TrackableCollection<TBL_Admin_Usuarios> TBL_Admin_Usuarios3
        {
            get
            {
                if (_tBL_Admin_Usuarios3 == null)
                {
                    _tBL_Admin_Usuarios3 = new TrackableCollection<TBL_Admin_Usuarios>();
                    _tBL_Admin_Usuarios3.CollectionChanged += FixupTBL_Admin_Usuarios3;
                }
                return _tBL_Admin_Usuarios3;
            }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios3, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tBL_Admin_Usuarios3 != null)
                    {
                        _tBL_Admin_Usuarios3.CollectionChanged -= FixupTBL_Admin_Usuarios3;
                    }
                    _tBL_Admin_Usuarios3 = value;
                    if (_tBL_Admin_Usuarios3 != null)
                    {
                        _tBL_Admin_Usuarios3.CollectionChanged += FixupTBL_Admin_Usuarios3;
                    }
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios3");
                }
            }
        }
        private TrackableCollection<TBL_Admin_Usuarios> _tBL_Admin_Usuarios3;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            AnexosComentarioRespuesta.Clear();
            ComentariosRespuesta1.Clear();
            ComentariosRespuesta2 = null;
            Contratos = null;
            TBL_Admin_Usuarios = null;
            TBL_Admin_Usuarios1 = null;
            TBL_Admin_Usuarios2 = null;
            TBL_Admin_Usuarios3.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupComentariosRespuesta2(ComentariosRespuesta previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ComentariosRespuesta1.Contains(this))
            {
                previousValue.ComentariosRespuesta1.Remove(this);
            }
    
            if (ComentariosRespuesta2 != null)
            {
                if (!ComentariosRespuesta2.ComentariosRespuesta1.Contains(this))
                {
                    ComentariosRespuesta2.ComentariosRespuesta1.Add(this);
                }
    
                IdComentarioRelacionado = ComentariosRespuesta2.IdComentario;
            }
            else if (!skipKeys)
            {
                IdComentarioRelacionado = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ComentariosRespuesta2")
                    && (ChangeTracker.OriginalValues["ComentariosRespuesta2"] == ComentariosRespuesta2))
                {
                    ChangeTracker.OriginalValues.Remove("ComentariosRespuesta2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ComentariosRespuesta2", previousValue);
                }
                if (ComentariosRespuesta2 != null && !ComentariosRespuesta2.ChangeTracker.ChangeTrackingEnabled)
                {
                    ComentariosRespuesta2.StartTracking();
                }
            }
        }
    
        private void FixupContratos(Contratos previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ComentariosRespuesta.Contains(this))
            {
                previousValue.ComentariosRespuesta.Remove(this);
            }
    
            if (Contratos != null)
            {
                if (!Contratos.ComentariosRespuesta.Contains(this))
                {
                    Contratos.ComentariosRespuesta.Add(this);
                }
    
                IdContrato = Contratos.IdContrato;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Contratos")
                    && (ChangeTracker.OriginalValues["Contratos"] == Contratos))
                {
                    ChangeTracker.OriginalValues.Remove("Contratos");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Contratos", previousValue);
                }
                if (Contratos != null && !Contratos.ChangeTracker.ChangeTrackingEnabled)
                {
                    Contratos.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_Usuarios(TBL_Admin_Usuarios previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ComentariosRespuesta.Contains(this))
            {
                previousValue.ComentariosRespuesta.Remove(this);
            }
    
            if (TBL_Admin_Usuarios != null)
            {
                if (!TBL_Admin_Usuarios.ComentariosRespuesta.Contains(this))
                {
                    TBL_Admin_Usuarios.ComentariosRespuesta.Add(this);
                }
    
                IdUsuarioDestino = TBL_Admin_Usuarios.IdUser;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_Usuarios")
                    && (ChangeTracker.OriginalValues["TBL_Admin_Usuarios"] == TBL_Admin_Usuarios))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_Usuarios");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_Usuarios", previousValue);
                }
                if (TBL_Admin_Usuarios != null && !TBL_Admin_Usuarios.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_Usuarios.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_Usuarios1(TBL_Admin_Usuarios previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ComentariosRespuesta1.Contains(this))
            {
                previousValue.ComentariosRespuesta1.Remove(this);
            }
    
            if (TBL_Admin_Usuarios1 != null)
            {
                if (!TBL_Admin_Usuarios1.ComentariosRespuesta1.Contains(this))
                {
                    TBL_Admin_Usuarios1.ComentariosRespuesta1.Add(this);
                }
    
                CreateBy = TBL_Admin_Usuarios1.IdUser;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_Usuarios1")
                    && (ChangeTracker.OriginalValues["TBL_Admin_Usuarios1"] == TBL_Admin_Usuarios1))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_Usuarios1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_Usuarios1", previousValue);
                }
                if (TBL_Admin_Usuarios1 != null && !TBL_Admin_Usuarios1.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_Usuarios1.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_Usuarios2(TBL_Admin_Usuarios previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ComentariosRespuesta2.Contains(this))
            {
                previousValue.ComentariosRespuesta2.Remove(this);
            }
    
            if (TBL_Admin_Usuarios2 != null)
            {
                if (!TBL_Admin_Usuarios2.ComentariosRespuesta2.Contains(this))
                {
                    TBL_Admin_Usuarios2.ComentariosRespuesta2.Add(this);
                }
    
                ModifiedBy = TBL_Admin_Usuarios2.IdUser;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_Usuarios2")
                    && (ChangeTracker.OriginalValues["TBL_Admin_Usuarios2"] == TBL_Admin_Usuarios2))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_Usuarios2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_Usuarios2", previousValue);
                }
                if (TBL_Admin_Usuarios2 != null && !TBL_Admin_Usuarios2.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_Usuarios2.StartTracking();
                }
            }
        }
    
        private void FixupAnexosComentarioRespuesta(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AnexosComentarioRespuesta item in e.NewItems)
                {
                    item.ComentariosRespuesta = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AnexosComentarioRespuesta", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AnexosComentarioRespuesta item in e.OldItems)
                {
                    if (ReferenceEquals(item.ComentariosRespuesta, this))
                    {
                        item.ComentariosRespuesta = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AnexosComentarioRespuesta", item);
                    }
                }
            }
        }
    
        private void FixupComentariosRespuesta1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ComentariosRespuesta item in e.NewItems)
                {
                    item.ComentariosRespuesta2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ComentariosRespuesta1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ComentariosRespuesta item in e.OldItems)
                {
                    if (ReferenceEquals(item.ComentariosRespuesta2, this))
                    {
                        item.ComentariosRespuesta2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ComentariosRespuesta1", item);
                    }
                }
            }
        }
    
        private void FixupTBL_Admin_Usuarios3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TBL_Admin_Usuarios item in e.NewItems)
                {
                    if (!item.ComentariosRespuesta3.Contains(this))
                    {
                        item.ComentariosRespuesta3.Add(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TBL_Admin_Usuarios3", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TBL_Admin_Usuarios item in e.OldItems)
                {
                    if (item.ComentariosRespuesta3.Contains(this))
                    {
                        item.ComentariosRespuesta3.Remove(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TBL_Admin_Usuarios3", item);
                    }
                }
            }
        }

        #endregion
    }
}
