//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

using Domain.Core.Entities;

namespace Domain.MainModules.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(AnexosComentarioRespuesta))]
    [KnownType(typeof(Bloques))]
    [KnownType(typeof(Campos))]
    [KnownType(typeof(ComentariosRespuesta))]
    [KnownType(typeof(Compromisos))]
    [KnownType(typeof(Contratos))]
    [KnownType(typeof(Dependencias))]
    [KnownType(typeof(DocumentosAnexoContrato))]
    [KnownType(typeof(DocumentosContrato))]
    [KnownType(typeof(DocumentosRadicado))]
    [KnownType(typeof(Empresas))]
    [KnownType(typeof(Fases))]
    [KnownType(typeof(Localizaciones))]
    [KnownType(typeof(LogContratos))]
    [KnownType(typeof(NovedadesContrato))]
    [KnownType(typeof(NovedadesFase))]
    [KnownType(typeof(PagosObligaciones))]
    [KnownType(typeof(Pozos))]
    [KnownType(typeof(Radicados))]
    [KnownType(typeof(TiposContrato))]
    [KnownType(typeof(TBL_Admin_Roles))]
    
    public partial class TBL_Admin_Usuarios: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int IdUser
        {
            get { return _idUser; }
            set
            {
                if (_idUser != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'IdUser' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _idUser = value;
                    OnPropertyChanged("IdUser");
                }
            }
        }
        private int _idUser;
    
        [DataMember]
        public string CodigoUser
        {
            get { return _codigoUser; }
            set
            {
                if (_codigoUser != value)
                {
                    _codigoUser = value;
                    OnPropertyChanged("CodigoUser");
                }
            }
        }
        private string _codigoUser;
    
        [DataMember]
        public string Nombres
        {
            get { return _nombres; }
            set
            {
                if (_nombres != value)
                {
                    _nombres = value;
                    OnPropertyChanged("Nombres");
                }
            }
        }
        private string _nombres;
    
        [DataMember]
        public System.DateTime FechaIngreso
        {
            get { return _fechaIngreso; }
            set
            {
                if (_fechaIngreso != value)
                {
                    _fechaIngreso = value;
                    OnPropertyChanged("FechaIngreso");
                }
            }
        }
        private System.DateTime _fechaIngreso;
    
        [DataMember]
        public Nullable<System.DateTime> lastlogin
        {
            get { return _lastlogin; }
            set
            {
                if (_lastlogin != value)
                {
                    _lastlogin = value;
                    OnPropertyChanged("lastlogin");
                }
            }
        }
        private Nullable<System.DateTime> _lastlogin;
    
        [DataMember]
        public string lastip
        {
            get { return _lastip; }
            set
            {
                if (_lastip != value)
                {
                    _lastip = value;
                    OnPropertyChanged("lastip");
                }
            }
        }
        private string _lastip;
    
        [DataMember]
        public string UserName
        {
            get { return _userName; }
            set
            {
                if (_userName != value)
                {
                    _userName = value;
                    OnPropertyChanged("UserName");
                }
            }
        }
        private string _userName;
    
        [DataMember]
        public string Password
        {
            get { return _password; }
            set
            {
                if (_password != value)
                {
                    _password = value;
                    OnPropertyChanged("Password");
                }
            }
        }
        private string _password;
    
        [DataMember]
        public string Email
        {
            get { return _email; }
            set
            {
                if (_email != value)
                {
                    _email = value;
                    OnPropertyChanged("Email");
                }
            }
        }
        private string _email;
    
        [DataMember]
        public bool IsActive
        {
            get { return _isActive; }
            set
            {
                if (_isActive != value)
                {
                    _isActive = value;
                    OnPropertyChanged("IsActive");
                }
            }
        }
        private bool _isActive;
    
        [DataMember]
        public string CreateBy
        {
            get { return _createBy; }
            set
            {
                if (_createBy != value)
                {
                    _createBy = value;
                    OnPropertyChanged("CreateBy");
                }
            }
        }
        private string _createBy;
    
        [DataMember]
        public Nullable<System.DateTime> CreateOn
        {
            get { return _createOn; }
            set
            {
                if (_createOn != value)
                {
                    _createOn = value;
                    OnPropertyChanged("CreateOn");
                }
            }
        }
        private Nullable<System.DateTime> _createOn;
    
        [DataMember]
        public string ModifiedBy
        {
            get { return _modifiedBy; }
            set
            {
                if (_modifiedBy != value)
                {
                    _modifiedBy = value;
                    OnPropertyChanged("ModifiedBy");
                }
            }
        }
        private string _modifiedBy;
    
        [DataMember]
        public Nullable<System.DateTime> ModifiedOn
        {
            get { return _modifiedOn; }
            set
            {
                if (_modifiedOn != value)
                {
                    _modifiedOn = value;
                    OnPropertyChanged("ModifiedOn");
                }
            }
        }
        private Nullable<System.DateTime> _modifiedOn;
    
        [DataMember]
        public string Documento
        {
            get { return _documento; }
            set
            {
                if (_documento != value)
                {
                    _documento = value;
                    OnPropertyChanged("Documento");
                }
            }
        }
        private string _documento;
    
        [DataMember]
        public string TelefonoFijo
        {
            get { return _telefonoFijo; }
            set
            {
                if (_telefonoFijo != value)
                {
                    _telefonoFijo = value;
                    OnPropertyChanged("TelefonoFijo");
                }
            }
        }
        private string _telefonoFijo;
    
        [DataMember]
        public string Movil
        {
            get { return _movil; }
            set
            {
                if (_movil != value)
                {
                    _movil = value;
                    OnPropertyChanged("Movil");
                }
            }
        }
        private string _movil;
    
        [DataMember]
        public string IdLocalizacion
        {
            get { return _idLocalizacion; }
            set
            {
                if (_idLocalizacion != value)
                {
                    ChangeTracker.RecordOriginalValue("IdLocalizacion", _idLocalizacion);
                    if (!IsDeserializing)
                    {
                        if (Localizaciones2 != null && Localizaciones2.IdLocalizacion != value)
                        {
                            Localizaciones2 = null;
                        }
                    }
                    _idLocalizacion = value;
                    OnPropertyChanged("IdLocalizacion");
                }
            }
        }
        private string _idLocalizacion;
    
        [DataMember]
        public string Direccion
        {
            get { return _direccion; }
            set
            {
                if (_direccion != value)
                {
                    _direccion = value;
                    OnPropertyChanged("Direccion");
                }
            }
        }
        private string _direccion;
    
        [DataMember]
        public string Extension
        {
            get { return _extension; }
            set
            {
                if (_extension != value)
                {
                    _extension = value;
                    OnPropertyChanged("Extension");
                }
            }
        }
        private string _extension;
    
        [DataMember]
        public string IdDependencia
        {
            get { return _idDependencia; }
            set
            {
                if (_idDependencia != value)
                {
                    ChangeTracker.RecordOriginalValue("IdDependencia", _idDependencia);
                    if (!IsDeserializing)
                    {
                        if (Dependencias2 != null && Dependencias2.IdDependencia != value)
                        {
                            Dependencias2 = null;
                        }
                    }
                    _idDependencia = value;
                    OnPropertyChanged("IdDependencia");
                }
            }
        }
        private string _idDependencia;
    
        [DataMember]
        public string Cargo
        {
            get { return _cargo; }
            set
            {
                if (_cargo != value)
                {
                    _cargo = value;
                    OnPropertyChanged("Cargo");
                }
            }
        }
        private string _cargo;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<AnexosComentarioRespuesta> AnexosComentarioRespuesta
        {
            get
            {
                if (_anexosComentarioRespuesta == null)
                {
                    _anexosComentarioRespuesta = new TrackableCollection<AnexosComentarioRespuesta>();
                    _anexosComentarioRespuesta.CollectionChanged += FixupAnexosComentarioRespuesta;
                }
                return _anexosComentarioRespuesta;
            }
            set
            {
                if (!ReferenceEquals(_anexosComentarioRespuesta, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_anexosComentarioRespuesta != null)
                    {
                        _anexosComentarioRespuesta.CollectionChanged -= FixupAnexosComentarioRespuesta;
                    }
                    _anexosComentarioRespuesta = value;
                    if (_anexosComentarioRespuesta != null)
                    {
                        _anexosComentarioRespuesta.CollectionChanged += FixupAnexosComentarioRespuesta;
                    }
                    OnNavigationPropertyChanged("AnexosComentarioRespuesta");
                }
            }
        }
        private TrackableCollection<AnexosComentarioRespuesta> _anexosComentarioRespuesta;
    
        [DataMember]
        public TrackableCollection<AnexosComentarioRespuesta> AnexosComentarioRespuesta1
        {
            get
            {
                if (_anexosComentarioRespuesta1 == null)
                {
                    _anexosComentarioRespuesta1 = new TrackableCollection<AnexosComentarioRespuesta>();
                    _anexosComentarioRespuesta1.CollectionChanged += FixupAnexosComentarioRespuesta1;
                }
                return _anexosComentarioRespuesta1;
            }
            set
            {
                if (!ReferenceEquals(_anexosComentarioRespuesta1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_anexosComentarioRespuesta1 != null)
                    {
                        _anexosComentarioRespuesta1.CollectionChanged -= FixupAnexosComentarioRespuesta1;
                    }
                    _anexosComentarioRespuesta1 = value;
                    if (_anexosComentarioRespuesta1 != null)
                    {
                        _anexosComentarioRespuesta1.CollectionChanged += FixupAnexosComentarioRespuesta1;
                    }
                    OnNavigationPropertyChanged("AnexosComentarioRespuesta1");
                }
            }
        }
        private TrackableCollection<AnexosComentarioRespuesta> _anexosComentarioRespuesta1;
    
        [DataMember]
        public TrackableCollection<Bloques> Bloques
        {
            get
            {
                if (_bloques == null)
                {
                    _bloques = new TrackableCollection<Bloques>();
                    _bloques.CollectionChanged += FixupBloques;
                }
                return _bloques;
            }
            set
            {
                if (!ReferenceEquals(_bloques, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_bloques != null)
                    {
                        _bloques.CollectionChanged -= FixupBloques;
                    }
                    _bloques = value;
                    if (_bloques != null)
                    {
                        _bloques.CollectionChanged += FixupBloques;
                    }
                    OnNavigationPropertyChanged("Bloques");
                }
            }
        }
        private TrackableCollection<Bloques> _bloques;
    
        [DataMember]
        public TrackableCollection<Bloques> Bloques1
        {
            get
            {
                if (_bloques1 == null)
                {
                    _bloques1 = new TrackableCollection<Bloques>();
                    _bloques1.CollectionChanged += FixupBloques1;
                }
                return _bloques1;
            }
            set
            {
                if (!ReferenceEquals(_bloques1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_bloques1 != null)
                    {
                        _bloques1.CollectionChanged -= FixupBloques1;
                    }
                    _bloques1 = value;
                    if (_bloques1 != null)
                    {
                        _bloques1.CollectionChanged += FixupBloques1;
                    }
                    OnNavigationPropertyChanged("Bloques1");
                }
            }
        }
        private TrackableCollection<Bloques> _bloques1;
    
        [DataMember]
        public TrackableCollection<Campos> Campos
        {
            get
            {
                if (_campos == null)
                {
                    _campos = new TrackableCollection<Campos>();
                    _campos.CollectionChanged += FixupCampos;
                }
                return _campos;
            }
            set
            {
                if (!ReferenceEquals(_campos, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_campos != null)
                    {
                        _campos.CollectionChanged -= FixupCampos;
                    }
                    _campos = value;
                    if (_campos != null)
                    {
                        _campos.CollectionChanged += FixupCampos;
                    }
                    OnNavigationPropertyChanged("Campos");
                }
            }
        }
        private TrackableCollection<Campos> _campos;
    
        [DataMember]
        public TrackableCollection<Campos> Campos1
        {
            get
            {
                if (_campos1 == null)
                {
                    _campos1 = new TrackableCollection<Campos>();
                    _campos1.CollectionChanged += FixupCampos1;
                }
                return _campos1;
            }
            set
            {
                if (!ReferenceEquals(_campos1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_campos1 != null)
                    {
                        _campos1.CollectionChanged -= FixupCampos1;
                    }
                    _campos1 = value;
                    if (_campos1 != null)
                    {
                        _campos1.CollectionChanged += FixupCampos1;
                    }
                    OnNavigationPropertyChanged("Campos1");
                }
            }
        }
        private TrackableCollection<Campos> _campos1;
    
        [DataMember]
        public TrackableCollection<ComentariosRespuesta> ComentariosRespuesta
        {
            get
            {
                if (_comentariosRespuesta == null)
                {
                    _comentariosRespuesta = new TrackableCollection<ComentariosRespuesta>();
                    _comentariosRespuesta.CollectionChanged += FixupComentariosRespuesta;
                }
                return _comentariosRespuesta;
            }
            set
            {
                if (!ReferenceEquals(_comentariosRespuesta, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_comentariosRespuesta != null)
                    {
                        _comentariosRespuesta.CollectionChanged -= FixupComentariosRespuesta;
                    }
                    _comentariosRespuesta = value;
                    if (_comentariosRespuesta != null)
                    {
                        _comentariosRespuesta.CollectionChanged += FixupComentariosRespuesta;
                    }
                    OnNavigationPropertyChanged("ComentariosRespuesta");
                }
            }
        }
        private TrackableCollection<ComentariosRespuesta> _comentariosRespuesta;
    
        [DataMember]
        public TrackableCollection<ComentariosRespuesta> ComentariosRespuesta1
        {
            get
            {
                if (_comentariosRespuesta1 == null)
                {
                    _comentariosRespuesta1 = new TrackableCollection<ComentariosRespuesta>();
                    _comentariosRespuesta1.CollectionChanged += FixupComentariosRespuesta1;
                }
                return _comentariosRespuesta1;
            }
            set
            {
                if (!ReferenceEquals(_comentariosRespuesta1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_comentariosRespuesta1 != null)
                    {
                        _comentariosRespuesta1.CollectionChanged -= FixupComentariosRespuesta1;
                    }
                    _comentariosRespuesta1 = value;
                    if (_comentariosRespuesta1 != null)
                    {
                        _comentariosRespuesta1.CollectionChanged += FixupComentariosRespuesta1;
                    }
                    OnNavigationPropertyChanged("ComentariosRespuesta1");
                }
            }
        }
        private TrackableCollection<ComentariosRespuesta> _comentariosRespuesta1;
    
        [DataMember]
        public TrackableCollection<ComentariosRespuesta> ComentariosRespuesta2
        {
            get
            {
                if (_comentariosRespuesta2 == null)
                {
                    _comentariosRespuesta2 = new TrackableCollection<ComentariosRespuesta>();
                    _comentariosRespuesta2.CollectionChanged += FixupComentariosRespuesta2;
                }
                return _comentariosRespuesta2;
            }
            set
            {
                if (!ReferenceEquals(_comentariosRespuesta2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_comentariosRespuesta2 != null)
                    {
                        _comentariosRespuesta2.CollectionChanged -= FixupComentariosRespuesta2;
                    }
                    _comentariosRespuesta2 = value;
                    if (_comentariosRespuesta2 != null)
                    {
                        _comentariosRespuesta2.CollectionChanged += FixupComentariosRespuesta2;
                    }
                    OnNavigationPropertyChanged("ComentariosRespuesta2");
                }
            }
        }
        private TrackableCollection<ComentariosRespuesta> _comentariosRespuesta2;
    
        [DataMember]
        public TrackableCollection<Compromisos> Compromisos
        {
            get
            {
                if (_compromisos == null)
                {
                    _compromisos = new TrackableCollection<Compromisos>();
                    _compromisos.CollectionChanged += FixupCompromisos;
                }
                return _compromisos;
            }
            set
            {
                if (!ReferenceEquals(_compromisos, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_compromisos != null)
                    {
                        _compromisos.CollectionChanged -= FixupCompromisos;
                    }
                    _compromisos = value;
                    if (_compromisos != null)
                    {
                        _compromisos.CollectionChanged += FixupCompromisos;
                    }
                    OnNavigationPropertyChanged("Compromisos");
                }
            }
        }
        private TrackableCollection<Compromisos> _compromisos;
    
        [DataMember]
        public TrackableCollection<Compromisos> Compromisos1
        {
            get
            {
                if (_compromisos1 == null)
                {
                    _compromisos1 = new TrackableCollection<Compromisos>();
                    _compromisos1.CollectionChanged += FixupCompromisos1;
                }
                return _compromisos1;
            }
            set
            {
                if (!ReferenceEquals(_compromisos1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_compromisos1 != null)
                    {
                        _compromisos1.CollectionChanged -= FixupCompromisos1;
                    }
                    _compromisos1 = value;
                    if (_compromisos1 != null)
                    {
                        _compromisos1.CollectionChanged += FixupCompromisos1;
                    }
                    OnNavigationPropertyChanged("Compromisos1");
                }
            }
        }
        private TrackableCollection<Compromisos> _compromisos1;
    
        [DataMember]
        public TrackableCollection<Contratos> Contratos
        {
            get
            {
                if (_contratos == null)
                {
                    _contratos = new TrackableCollection<Contratos>();
                    _contratos.CollectionChanged += FixupContratos;
                }
                return _contratos;
            }
            set
            {
                if (!ReferenceEquals(_contratos, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_contratos != null)
                    {
                        _contratos.CollectionChanged -= FixupContratos;
                    }
                    _contratos = value;
                    if (_contratos != null)
                    {
                        _contratos.CollectionChanged += FixupContratos;
                    }
                    OnNavigationPropertyChanged("Contratos");
                }
            }
        }
        private TrackableCollection<Contratos> _contratos;
    
        [DataMember]
        public TrackableCollection<Contratos> Contratos1
        {
            get
            {
                if (_contratos1 == null)
                {
                    _contratos1 = new TrackableCollection<Contratos>();
                    _contratos1.CollectionChanged += FixupContratos1;
                }
                return _contratos1;
            }
            set
            {
                if (!ReferenceEquals(_contratos1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_contratos1 != null)
                    {
                        _contratos1.CollectionChanged -= FixupContratos1;
                    }
                    _contratos1 = value;
                    if (_contratos1 != null)
                    {
                        _contratos1.CollectionChanged += FixupContratos1;
                    }
                    OnNavigationPropertyChanged("Contratos1");
                }
            }
        }
        private TrackableCollection<Contratos> _contratos1;
    
        [DataMember]
        public TrackableCollection<Contratos> Contratos2
        {
            get
            {
                if (_contratos2 == null)
                {
                    _contratos2 = new TrackableCollection<Contratos>();
                    _contratos2.CollectionChanged += FixupContratos2;
                }
                return _contratos2;
            }
            set
            {
                if (!ReferenceEquals(_contratos2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_contratos2 != null)
                    {
                        _contratos2.CollectionChanged -= FixupContratos2;
                    }
                    _contratos2 = value;
                    if (_contratos2 != null)
                    {
                        _contratos2.CollectionChanged += FixupContratos2;
                    }
                    OnNavigationPropertyChanged("Contratos2");
                }
            }
        }
        private TrackableCollection<Contratos> _contratos2;
    
        [DataMember]
        public TrackableCollection<Dependencias> Dependencias
        {
            get
            {
                if (_dependencias == null)
                {
                    _dependencias = new TrackableCollection<Dependencias>();
                    _dependencias.CollectionChanged += FixupDependencias;
                }
                return _dependencias;
            }
            set
            {
                if (!ReferenceEquals(_dependencias, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_dependencias != null)
                    {
                        _dependencias.CollectionChanged -= FixupDependencias;
                    }
                    _dependencias = value;
                    if (_dependencias != null)
                    {
                        _dependencias.CollectionChanged += FixupDependencias;
                    }
                    OnNavigationPropertyChanged("Dependencias");
                }
            }
        }
        private TrackableCollection<Dependencias> _dependencias;
    
        [DataMember]
        public TrackableCollection<Dependencias> Dependencias1
        {
            get
            {
                if (_dependencias1 == null)
                {
                    _dependencias1 = new TrackableCollection<Dependencias>();
                    _dependencias1.CollectionChanged += FixupDependencias1;
                }
                return _dependencias1;
            }
            set
            {
                if (!ReferenceEquals(_dependencias1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_dependencias1 != null)
                    {
                        _dependencias1.CollectionChanged -= FixupDependencias1;
                    }
                    _dependencias1 = value;
                    if (_dependencias1 != null)
                    {
                        _dependencias1.CollectionChanged += FixupDependencias1;
                    }
                    OnNavigationPropertyChanged("Dependencias1");
                }
            }
        }
        private TrackableCollection<Dependencias> _dependencias1;
    
        [DataMember]
        public Dependencias Dependencias2
        {
            get { return _dependencias2; }
            set
            {
                if (!ReferenceEquals(_dependencias2, value))
                {
                    var previousValue = _dependencias2;
                    _dependencias2 = value;
                    FixupDependencias2(previousValue);
                    OnNavigationPropertyChanged("Dependencias2");
                }
            }
        }
        private Dependencias _dependencias2;
    
        [DataMember]
        public TrackableCollection<DocumentosAnexoContrato> DocumentosAnexoContrato
        {
            get
            {
                if (_documentosAnexoContrato == null)
                {
                    _documentosAnexoContrato = new TrackableCollection<DocumentosAnexoContrato>();
                    _documentosAnexoContrato.CollectionChanged += FixupDocumentosAnexoContrato;
                }
                return _documentosAnexoContrato;
            }
            set
            {
                if (!ReferenceEquals(_documentosAnexoContrato, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_documentosAnexoContrato != null)
                    {
                        _documentosAnexoContrato.CollectionChanged -= FixupDocumentosAnexoContrato;
                    }
                    _documentosAnexoContrato = value;
                    if (_documentosAnexoContrato != null)
                    {
                        _documentosAnexoContrato.CollectionChanged += FixupDocumentosAnexoContrato;
                    }
                    OnNavigationPropertyChanged("DocumentosAnexoContrato");
                }
            }
        }
        private TrackableCollection<DocumentosAnexoContrato> _documentosAnexoContrato;
    
        [DataMember]
        public TrackableCollection<DocumentosAnexoContrato> DocumentosAnexoContrato1
        {
            get
            {
                if (_documentosAnexoContrato1 == null)
                {
                    _documentosAnexoContrato1 = new TrackableCollection<DocumentosAnexoContrato>();
                    _documentosAnexoContrato1.CollectionChanged += FixupDocumentosAnexoContrato1;
                }
                return _documentosAnexoContrato1;
            }
            set
            {
                if (!ReferenceEquals(_documentosAnexoContrato1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_documentosAnexoContrato1 != null)
                    {
                        _documentosAnexoContrato1.CollectionChanged -= FixupDocumentosAnexoContrato1;
                    }
                    _documentosAnexoContrato1 = value;
                    if (_documentosAnexoContrato1 != null)
                    {
                        _documentosAnexoContrato1.CollectionChanged += FixupDocumentosAnexoContrato1;
                    }
                    OnNavigationPropertyChanged("DocumentosAnexoContrato1");
                }
            }
        }
        private TrackableCollection<DocumentosAnexoContrato> _documentosAnexoContrato1;
    
        [DataMember]
        public TrackableCollection<DocumentosContrato> DocumentosContrato
        {
            get
            {
                if (_documentosContrato == null)
                {
                    _documentosContrato = new TrackableCollection<DocumentosContrato>();
                    _documentosContrato.CollectionChanged += FixupDocumentosContrato;
                }
                return _documentosContrato;
            }
            set
            {
                if (!ReferenceEquals(_documentosContrato, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_documentosContrato != null)
                    {
                        _documentosContrato.CollectionChanged -= FixupDocumentosContrato;
                    }
                    _documentosContrato = value;
                    if (_documentosContrato != null)
                    {
                        _documentosContrato.CollectionChanged += FixupDocumentosContrato;
                    }
                    OnNavigationPropertyChanged("DocumentosContrato");
                }
            }
        }
        private TrackableCollection<DocumentosContrato> _documentosContrato;
    
        [DataMember]
        public TrackableCollection<DocumentosContrato> DocumentosContrato1
        {
            get
            {
                if (_documentosContrato1 == null)
                {
                    _documentosContrato1 = new TrackableCollection<DocumentosContrato>();
                    _documentosContrato1.CollectionChanged += FixupDocumentosContrato1;
                }
                return _documentosContrato1;
            }
            set
            {
                if (!ReferenceEquals(_documentosContrato1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_documentosContrato1 != null)
                    {
                        _documentosContrato1.CollectionChanged -= FixupDocumentosContrato1;
                    }
                    _documentosContrato1 = value;
                    if (_documentosContrato1 != null)
                    {
                        _documentosContrato1.CollectionChanged += FixupDocumentosContrato1;
                    }
                    OnNavigationPropertyChanged("DocumentosContrato1");
                }
            }
        }
        private TrackableCollection<DocumentosContrato> _documentosContrato1;
    
        [DataMember]
        public TrackableCollection<DocumentosContrato> DocumentosContrato2
        {
            get
            {
                if (_documentosContrato2 == null)
                {
                    _documentosContrato2 = new TrackableCollection<DocumentosContrato>();
                    _documentosContrato2.CollectionChanged += FixupDocumentosContrato2;
                }
                return _documentosContrato2;
            }
            set
            {
                if (!ReferenceEquals(_documentosContrato2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_documentosContrato2 != null)
                    {
                        _documentosContrato2.CollectionChanged -= FixupDocumentosContrato2;
                    }
                    _documentosContrato2 = value;
                    if (_documentosContrato2 != null)
                    {
                        _documentosContrato2.CollectionChanged += FixupDocumentosContrato2;
                    }
                    OnNavigationPropertyChanged("DocumentosContrato2");
                }
            }
        }
        private TrackableCollection<DocumentosContrato> _documentosContrato2;
    
        [DataMember]
        public TrackableCollection<DocumentosContrato> DocumentosContrato3
        {
            get
            {
                if (_documentosContrato3 == null)
                {
                    _documentosContrato3 = new TrackableCollection<DocumentosContrato>();
                    _documentosContrato3.CollectionChanged += FixupDocumentosContrato3;
                }
                return _documentosContrato3;
            }
            set
            {
                if (!ReferenceEquals(_documentosContrato3, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_documentosContrato3 != null)
                    {
                        _documentosContrato3.CollectionChanged -= FixupDocumentosContrato3;
                    }
                    _documentosContrato3 = value;
                    if (_documentosContrato3 != null)
                    {
                        _documentosContrato3.CollectionChanged += FixupDocumentosContrato3;
                    }
                    OnNavigationPropertyChanged("DocumentosContrato3");
                }
            }
        }
        private TrackableCollection<DocumentosContrato> _documentosContrato3;
    
        [DataMember]
        public TrackableCollection<DocumentosRadicado> DocumentosRadicado
        {
            get
            {
                if (_documentosRadicado == null)
                {
                    _documentosRadicado = new TrackableCollection<DocumentosRadicado>();
                    _documentosRadicado.CollectionChanged += FixupDocumentosRadicado;
                }
                return _documentosRadicado;
            }
            set
            {
                if (!ReferenceEquals(_documentosRadicado, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_documentosRadicado != null)
                    {
                        _documentosRadicado.CollectionChanged -= FixupDocumentosRadicado;
                    }
                    _documentosRadicado = value;
                    if (_documentosRadicado != null)
                    {
                        _documentosRadicado.CollectionChanged += FixupDocumentosRadicado;
                    }
                    OnNavigationPropertyChanged("DocumentosRadicado");
                }
            }
        }
        private TrackableCollection<DocumentosRadicado> _documentosRadicado;
    
        [DataMember]
        public TrackableCollection<DocumentosRadicado> DocumentosRadicado1
        {
            get
            {
                if (_documentosRadicado1 == null)
                {
                    _documentosRadicado1 = new TrackableCollection<DocumentosRadicado>();
                    _documentosRadicado1.CollectionChanged += FixupDocumentosRadicado1;
                }
                return _documentosRadicado1;
            }
            set
            {
                if (!ReferenceEquals(_documentosRadicado1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_documentosRadicado1 != null)
                    {
                        _documentosRadicado1.CollectionChanged -= FixupDocumentosRadicado1;
                    }
                    _documentosRadicado1 = value;
                    if (_documentosRadicado1 != null)
                    {
                        _documentosRadicado1.CollectionChanged += FixupDocumentosRadicado1;
                    }
                    OnNavigationPropertyChanged("DocumentosRadicado1");
                }
            }
        }
        private TrackableCollection<DocumentosRadicado> _documentosRadicado1;
    
        [DataMember]
        public TrackableCollection<Empresas> Empresas
        {
            get
            {
                if (_empresas == null)
                {
                    _empresas = new TrackableCollection<Empresas>();
                    _empresas.CollectionChanged += FixupEmpresas;
                }
                return _empresas;
            }
            set
            {
                if (!ReferenceEquals(_empresas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_empresas != null)
                    {
                        _empresas.CollectionChanged -= FixupEmpresas;
                    }
                    _empresas = value;
                    if (_empresas != null)
                    {
                        _empresas.CollectionChanged += FixupEmpresas;
                    }
                    OnNavigationPropertyChanged("Empresas");
                }
            }
        }
        private TrackableCollection<Empresas> _empresas;
    
        [DataMember]
        public TrackableCollection<Empresas> Empresas1
        {
            get
            {
                if (_empresas1 == null)
                {
                    _empresas1 = new TrackableCollection<Empresas>();
                    _empresas1.CollectionChanged += FixupEmpresas1;
                }
                return _empresas1;
            }
            set
            {
                if (!ReferenceEquals(_empresas1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_empresas1 != null)
                    {
                        _empresas1.CollectionChanged -= FixupEmpresas1;
                    }
                    _empresas1 = value;
                    if (_empresas1 != null)
                    {
                        _empresas1.CollectionChanged += FixupEmpresas1;
                    }
                    OnNavigationPropertyChanged("Empresas1");
                }
            }
        }
        private TrackableCollection<Empresas> _empresas1;
    
        [DataMember]
        public TrackableCollection<Fases> Fases
        {
            get
            {
                if (_fases == null)
                {
                    _fases = new TrackableCollection<Fases>();
                    _fases.CollectionChanged += FixupFases;
                }
                return _fases;
            }
            set
            {
                if (!ReferenceEquals(_fases, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_fases != null)
                    {
                        _fases.CollectionChanged -= FixupFases;
                    }
                    _fases = value;
                    if (_fases != null)
                    {
                        _fases.CollectionChanged += FixupFases;
                    }
                    OnNavigationPropertyChanged("Fases");
                }
            }
        }
        private TrackableCollection<Fases> _fases;
    
        [DataMember]
        public TrackableCollection<Fases> Fases1
        {
            get
            {
                if (_fases1 == null)
                {
                    _fases1 = new TrackableCollection<Fases>();
                    _fases1.CollectionChanged += FixupFases1;
                }
                return _fases1;
            }
            set
            {
                if (!ReferenceEquals(_fases1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_fases1 != null)
                    {
                        _fases1.CollectionChanged -= FixupFases1;
                    }
                    _fases1 = value;
                    if (_fases1 != null)
                    {
                        _fases1.CollectionChanged += FixupFases1;
                    }
                    OnNavigationPropertyChanged("Fases1");
                }
            }
        }
        private TrackableCollection<Fases> _fases1;
    
        [DataMember]
        public TrackableCollection<Localizaciones> Localizaciones
        {
            get
            {
                if (_localizaciones == null)
                {
                    _localizaciones = new TrackableCollection<Localizaciones>();
                    _localizaciones.CollectionChanged += FixupLocalizaciones;
                }
                return _localizaciones;
            }
            set
            {
                if (!ReferenceEquals(_localizaciones, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_localizaciones != null)
                    {
                        _localizaciones.CollectionChanged -= FixupLocalizaciones;
                    }
                    _localizaciones = value;
                    if (_localizaciones != null)
                    {
                        _localizaciones.CollectionChanged += FixupLocalizaciones;
                    }
                    OnNavigationPropertyChanged("Localizaciones");
                }
            }
        }
        private TrackableCollection<Localizaciones> _localizaciones;
    
        [DataMember]
        public TrackableCollection<Localizaciones> Localizaciones1
        {
            get
            {
                if (_localizaciones1 == null)
                {
                    _localizaciones1 = new TrackableCollection<Localizaciones>();
                    _localizaciones1.CollectionChanged += FixupLocalizaciones1;
                }
                return _localizaciones1;
            }
            set
            {
                if (!ReferenceEquals(_localizaciones1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_localizaciones1 != null)
                    {
                        _localizaciones1.CollectionChanged -= FixupLocalizaciones1;
                    }
                    _localizaciones1 = value;
                    if (_localizaciones1 != null)
                    {
                        _localizaciones1.CollectionChanged += FixupLocalizaciones1;
                    }
                    OnNavigationPropertyChanged("Localizaciones1");
                }
            }
        }
        private TrackableCollection<Localizaciones> _localizaciones1;
    
        [DataMember]
        public Localizaciones Localizaciones2
        {
            get { return _localizaciones2; }
            set
            {
                if (!ReferenceEquals(_localizaciones2, value))
                {
                    var previousValue = _localizaciones2;
                    _localizaciones2 = value;
                    FixupLocalizaciones2(previousValue);
                    OnNavigationPropertyChanged("Localizaciones2");
                }
            }
        }
        private Localizaciones _localizaciones2;
    
        [DataMember]
        public TrackableCollection<LogContratos> LogContratos
        {
            get
            {
                if (_logContratos == null)
                {
                    _logContratos = new TrackableCollection<LogContratos>();
                    _logContratos.CollectionChanged += FixupLogContratos;
                }
                return _logContratos;
            }
            set
            {
                if (!ReferenceEquals(_logContratos, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_logContratos != null)
                    {
                        _logContratos.CollectionChanged -= FixupLogContratos;
                    }
                    _logContratos = value;
                    if (_logContratos != null)
                    {
                        _logContratos.CollectionChanged += FixupLogContratos;
                    }
                    OnNavigationPropertyChanged("LogContratos");
                }
            }
        }
        private TrackableCollection<LogContratos> _logContratos;
    
        [DataMember]
        public TrackableCollection<NovedadesContrato> NovedadesContrato
        {
            get
            {
                if (_novedadesContrato == null)
                {
                    _novedadesContrato = new TrackableCollection<NovedadesContrato>();
                    _novedadesContrato.CollectionChanged += FixupNovedadesContrato;
                }
                return _novedadesContrato;
            }
            set
            {
                if (!ReferenceEquals(_novedadesContrato, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_novedadesContrato != null)
                    {
                        _novedadesContrato.CollectionChanged -= FixupNovedadesContrato;
                    }
                    _novedadesContrato = value;
                    if (_novedadesContrato != null)
                    {
                        _novedadesContrato.CollectionChanged += FixupNovedadesContrato;
                    }
                    OnNavigationPropertyChanged("NovedadesContrato");
                }
            }
        }
        private TrackableCollection<NovedadesContrato> _novedadesContrato;
    
        [DataMember]
        public TrackableCollection<NovedadesContrato> NovedadesContrato1
        {
            get
            {
                if (_novedadesContrato1 == null)
                {
                    _novedadesContrato1 = new TrackableCollection<NovedadesContrato>();
                    _novedadesContrato1.CollectionChanged += FixupNovedadesContrato1;
                }
                return _novedadesContrato1;
            }
            set
            {
                if (!ReferenceEquals(_novedadesContrato1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_novedadesContrato1 != null)
                    {
                        _novedadesContrato1.CollectionChanged -= FixupNovedadesContrato1;
                    }
                    _novedadesContrato1 = value;
                    if (_novedadesContrato1 != null)
                    {
                        _novedadesContrato1.CollectionChanged += FixupNovedadesContrato1;
                    }
                    OnNavigationPropertyChanged("NovedadesContrato1");
                }
            }
        }
        private TrackableCollection<NovedadesContrato> _novedadesContrato1;
    
        [DataMember]
        public TrackableCollection<NovedadesContrato> NovedadesContrato2
        {
            get
            {
                if (_novedadesContrato2 == null)
                {
                    _novedadesContrato2 = new TrackableCollection<NovedadesContrato>();
                    _novedadesContrato2.CollectionChanged += FixupNovedadesContrato2;
                }
                return _novedadesContrato2;
            }
            set
            {
                if (!ReferenceEquals(_novedadesContrato2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_novedadesContrato2 != null)
                    {
                        _novedadesContrato2.CollectionChanged -= FixupNovedadesContrato2;
                    }
                    _novedadesContrato2 = value;
                    if (_novedadesContrato2 != null)
                    {
                        _novedadesContrato2.CollectionChanged += FixupNovedadesContrato2;
                    }
                    OnNavigationPropertyChanged("NovedadesContrato2");
                }
            }
        }
        private TrackableCollection<NovedadesContrato> _novedadesContrato2;
    
        [DataMember]
        public TrackableCollection<NovedadesFase> NovedadesFase
        {
            get
            {
                if (_novedadesFase == null)
                {
                    _novedadesFase = new TrackableCollection<NovedadesFase>();
                    _novedadesFase.CollectionChanged += FixupNovedadesFase;
                }
                return _novedadesFase;
            }
            set
            {
                if (!ReferenceEquals(_novedadesFase, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_novedadesFase != null)
                    {
                        _novedadesFase.CollectionChanged -= FixupNovedadesFase;
                    }
                    _novedadesFase = value;
                    if (_novedadesFase != null)
                    {
                        _novedadesFase.CollectionChanged += FixupNovedadesFase;
                    }
                    OnNavigationPropertyChanged("NovedadesFase");
                }
            }
        }
        private TrackableCollection<NovedadesFase> _novedadesFase;
    
        [DataMember]
        public TrackableCollection<NovedadesFase> NovedadesFase1
        {
            get
            {
                if (_novedadesFase1 == null)
                {
                    _novedadesFase1 = new TrackableCollection<NovedadesFase>();
                    _novedadesFase1.CollectionChanged += FixupNovedadesFase1;
                }
                return _novedadesFase1;
            }
            set
            {
                if (!ReferenceEquals(_novedadesFase1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_novedadesFase1 != null)
                    {
                        _novedadesFase1.CollectionChanged -= FixupNovedadesFase1;
                    }
                    _novedadesFase1 = value;
                    if (_novedadesFase1 != null)
                    {
                        _novedadesFase1.CollectionChanged += FixupNovedadesFase1;
                    }
                    OnNavigationPropertyChanged("NovedadesFase1");
                }
            }
        }
        private TrackableCollection<NovedadesFase> _novedadesFase1;
    
        [DataMember]
        public TrackableCollection<PagosObligaciones> PagosObligaciones
        {
            get
            {
                if (_pagosObligaciones == null)
                {
                    _pagosObligaciones = new TrackableCollection<PagosObligaciones>();
                    _pagosObligaciones.CollectionChanged += FixupPagosObligaciones;
                }
                return _pagosObligaciones;
            }
            set
            {
                if (!ReferenceEquals(_pagosObligaciones, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pagosObligaciones != null)
                    {
                        _pagosObligaciones.CollectionChanged -= FixupPagosObligaciones;
                    }
                    _pagosObligaciones = value;
                    if (_pagosObligaciones != null)
                    {
                        _pagosObligaciones.CollectionChanged += FixupPagosObligaciones;
                    }
                    OnNavigationPropertyChanged("PagosObligaciones");
                }
            }
        }
        private TrackableCollection<PagosObligaciones> _pagosObligaciones;
    
        [DataMember]
        public TrackableCollection<PagosObligaciones> PagosObligaciones1
        {
            get
            {
                if (_pagosObligaciones1 == null)
                {
                    _pagosObligaciones1 = new TrackableCollection<PagosObligaciones>();
                    _pagosObligaciones1.CollectionChanged += FixupPagosObligaciones1;
                }
                return _pagosObligaciones1;
            }
            set
            {
                if (!ReferenceEquals(_pagosObligaciones1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pagosObligaciones1 != null)
                    {
                        _pagosObligaciones1.CollectionChanged -= FixupPagosObligaciones1;
                    }
                    _pagosObligaciones1 = value;
                    if (_pagosObligaciones1 != null)
                    {
                        _pagosObligaciones1.CollectionChanged += FixupPagosObligaciones1;
                    }
                    OnNavigationPropertyChanged("PagosObligaciones1");
                }
            }
        }
        private TrackableCollection<PagosObligaciones> _pagosObligaciones1;
    
        [DataMember]
        public TrackableCollection<Pozos> Pozos
        {
            get
            {
                if (_pozos == null)
                {
                    _pozos = new TrackableCollection<Pozos>();
                    _pozos.CollectionChanged += FixupPozos;
                }
                return _pozos;
            }
            set
            {
                if (!ReferenceEquals(_pozos, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pozos != null)
                    {
                        _pozos.CollectionChanged -= FixupPozos;
                    }
                    _pozos = value;
                    if (_pozos != null)
                    {
                        _pozos.CollectionChanged += FixupPozos;
                    }
                    OnNavigationPropertyChanged("Pozos");
                }
            }
        }
        private TrackableCollection<Pozos> _pozos;
    
        [DataMember]
        public TrackableCollection<Pozos> Pozos1
        {
            get
            {
                if (_pozos1 == null)
                {
                    _pozos1 = new TrackableCollection<Pozos>();
                    _pozos1.CollectionChanged += FixupPozos1;
                }
                return _pozos1;
            }
            set
            {
                if (!ReferenceEquals(_pozos1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pozos1 != null)
                    {
                        _pozos1.CollectionChanged -= FixupPozos1;
                    }
                    _pozos1 = value;
                    if (_pozos1 != null)
                    {
                        _pozos1.CollectionChanged += FixupPozos1;
                    }
                    OnNavigationPropertyChanged("Pozos1");
                }
            }
        }
        private TrackableCollection<Pozos> _pozos1;
    
        [DataMember]
        public TrackableCollection<Radicados> Radicados
        {
            get
            {
                if (_radicados == null)
                {
                    _radicados = new TrackableCollection<Radicados>();
                    _radicados.CollectionChanged += FixupRadicados;
                }
                return _radicados;
            }
            set
            {
                if (!ReferenceEquals(_radicados, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_radicados != null)
                    {
                        _radicados.CollectionChanged -= FixupRadicados;
                    }
                    _radicados = value;
                    if (_radicados != null)
                    {
                        _radicados.CollectionChanged += FixupRadicados;
                    }
                    OnNavigationPropertyChanged("Radicados");
                }
            }
        }
        private TrackableCollection<Radicados> _radicados;
    
        [DataMember]
        public TrackableCollection<Radicados> Radicados1
        {
            get
            {
                if (_radicados1 == null)
                {
                    _radicados1 = new TrackableCollection<Radicados>();
                    _radicados1.CollectionChanged += FixupRadicados1;
                }
                return _radicados1;
            }
            set
            {
                if (!ReferenceEquals(_radicados1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_radicados1 != null)
                    {
                        _radicados1.CollectionChanged -= FixupRadicados1;
                    }
                    _radicados1 = value;
                    if (_radicados1 != null)
                    {
                        _radicados1.CollectionChanged += FixupRadicados1;
                    }
                    OnNavigationPropertyChanged("Radicados1");
                }
            }
        }
        private TrackableCollection<Radicados> _radicados1;
    
        [DataMember]
        public TrackableCollection<Radicados> Radicados2
        {
            get
            {
                if (_radicados2 == null)
                {
                    _radicados2 = new TrackableCollection<Radicados>();
                    _radicados2.CollectionChanged += FixupRadicados2;
                }
                return _radicados2;
            }
            set
            {
                if (!ReferenceEquals(_radicados2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_radicados2 != null)
                    {
                        _radicados2.CollectionChanged -= FixupRadicados2;
                    }
                    _radicados2 = value;
                    if (_radicados2 != null)
                    {
                        _radicados2.CollectionChanged += FixupRadicados2;
                    }
                    OnNavigationPropertyChanged("Radicados2");
                }
            }
        }
        private TrackableCollection<Radicados> _radicados2;
    
        [DataMember]
        public TrackableCollection<Radicados> Radicados3
        {
            get
            {
                if (_radicados3 == null)
                {
                    _radicados3 = new TrackableCollection<Radicados>();
                    _radicados3.CollectionChanged += FixupRadicados3;
                }
                return _radicados3;
            }
            set
            {
                if (!ReferenceEquals(_radicados3, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_radicados3 != null)
                    {
                        _radicados3.CollectionChanged -= FixupRadicados3;
                    }
                    _radicados3 = value;
                    if (_radicados3 != null)
                    {
                        _radicados3.CollectionChanged += FixupRadicados3;
                    }
                    OnNavigationPropertyChanged("Radicados3");
                }
            }
        }
        private TrackableCollection<Radicados> _radicados3;
    
        [DataMember]
        public TrackableCollection<Radicados> Radicados4
        {
            get
            {
                if (_radicados4 == null)
                {
                    _radicados4 = new TrackableCollection<Radicados>();
                    _radicados4.CollectionChanged += FixupRadicados4;
                }
                return _radicados4;
            }
            set
            {
                if (!ReferenceEquals(_radicados4, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_radicados4 != null)
                    {
                        _radicados4.CollectionChanged -= FixupRadicados4;
                    }
                    _radicados4 = value;
                    if (_radicados4 != null)
                    {
                        _radicados4.CollectionChanged += FixupRadicados4;
                    }
                    OnNavigationPropertyChanged("Radicados4");
                }
            }
        }
        private TrackableCollection<Radicados> _radicados4;
    
        [DataMember]
        public TrackableCollection<TiposContrato> TiposContrato
        {
            get
            {
                if (_tiposContrato == null)
                {
                    _tiposContrato = new TrackableCollection<TiposContrato>();
                    _tiposContrato.CollectionChanged += FixupTiposContrato;
                }
                return _tiposContrato;
            }
            set
            {
                if (!ReferenceEquals(_tiposContrato, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tiposContrato != null)
                    {
                        _tiposContrato.CollectionChanged -= FixupTiposContrato;
                    }
                    _tiposContrato = value;
                    if (_tiposContrato != null)
                    {
                        _tiposContrato.CollectionChanged += FixupTiposContrato;
                    }
                    OnNavigationPropertyChanged("TiposContrato");
                }
            }
        }
        private TrackableCollection<TiposContrato> _tiposContrato;
    
        [DataMember]
        public TrackableCollection<TiposContrato> TiposContrato1
        {
            get
            {
                if (_tiposContrato1 == null)
                {
                    _tiposContrato1 = new TrackableCollection<TiposContrato>();
                    _tiposContrato1.CollectionChanged += FixupTiposContrato1;
                }
                return _tiposContrato1;
            }
            set
            {
                if (!ReferenceEquals(_tiposContrato1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tiposContrato1 != null)
                    {
                        _tiposContrato1.CollectionChanged -= FixupTiposContrato1;
                    }
                    _tiposContrato1 = value;
                    if (_tiposContrato1 != null)
                    {
                        _tiposContrato1.CollectionChanged += FixupTiposContrato1;
                    }
                    OnNavigationPropertyChanged("TiposContrato1");
                }
            }
        }
        private TrackableCollection<TiposContrato> _tiposContrato1;
    
        [DataMember]
        public TrackableCollection<Compromisos> Compromisos2
        {
            get
            {
                if (_compromisos2 == null)
                {
                    _compromisos2 = new TrackableCollection<Compromisos>();
                    _compromisos2.CollectionChanged += FixupCompromisos2;
                }
                return _compromisos2;
            }
            set
            {
                if (!ReferenceEquals(_compromisos2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_compromisos2 != null)
                    {
                        _compromisos2.CollectionChanged -= FixupCompromisos2;
                    }
                    _compromisos2 = value;
                    if (_compromisos2 != null)
                    {
                        _compromisos2.CollectionChanged += FixupCompromisos2;
                    }
                    OnNavigationPropertyChanged("Compromisos2");
                }
            }
        }
        private TrackableCollection<Compromisos> _compromisos2;
    
        [DataMember]
        public TrackableCollection<Radicados> Radicados5
        {
            get
            {
                if (_radicados5 == null)
                {
                    _radicados5 = new TrackableCollection<Radicados>();
                    _radicados5.CollectionChanged += FixupRadicados5;
                }
                return _radicados5;
            }
            set
            {
                if (!ReferenceEquals(_radicados5, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_radicados5 != null)
                    {
                        _radicados5.CollectionChanged -= FixupRadicados5;
                    }
                    _radicados5 = value;
                    if (_radicados5 != null)
                    {
                        _radicados5.CollectionChanged += FixupRadicados5;
                    }
                    OnNavigationPropertyChanged("Radicados5");
                }
            }
        }
        private TrackableCollection<Radicados> _radicados5;
    
        [DataMember]
        public TrackableCollection<TBL_Admin_Roles> TBL_Admin_Roles
        {
            get
            {
                if (_tBL_Admin_Roles == null)
                {
                    _tBL_Admin_Roles = new TrackableCollection<TBL_Admin_Roles>();
                    _tBL_Admin_Roles.CollectionChanged += FixupTBL_Admin_Roles;
                }
                return _tBL_Admin_Roles;
            }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Roles, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tBL_Admin_Roles != null)
                    {
                        _tBL_Admin_Roles.CollectionChanged -= FixupTBL_Admin_Roles;
                    }
                    _tBL_Admin_Roles = value;
                    if (_tBL_Admin_Roles != null)
                    {
                        _tBL_Admin_Roles.CollectionChanged += FixupTBL_Admin_Roles;
                    }
                    OnNavigationPropertyChanged("TBL_Admin_Roles");
                }
            }
        }
        private TrackableCollection<TBL_Admin_Roles> _tBL_Admin_Roles;
    
        [DataMember]
        public TrackableCollection<ComentariosRespuesta> ComentariosRespuesta3
        {
            get
            {
                if (_comentariosRespuesta3 == null)
                {
                    _comentariosRespuesta3 = new TrackableCollection<ComentariosRespuesta>();
                    _comentariosRespuesta3.CollectionChanged += FixupComentariosRespuesta3;
                }
                return _comentariosRespuesta3;
            }
            set
            {
                if (!ReferenceEquals(_comentariosRespuesta3, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_comentariosRespuesta3 != null)
                    {
                        _comentariosRespuesta3.CollectionChanged -= FixupComentariosRespuesta3;
                    }
                    _comentariosRespuesta3 = value;
                    if (_comentariosRespuesta3 != null)
                    {
                        _comentariosRespuesta3.CollectionChanged += FixupComentariosRespuesta3;
                    }
                    OnNavigationPropertyChanged("ComentariosRespuesta3");
                }
            }
        }
        private TrackableCollection<ComentariosRespuesta> _comentariosRespuesta3;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            AnexosComentarioRespuesta.Clear();
            AnexosComentarioRespuesta1.Clear();
            Bloques.Clear();
            Bloques1.Clear();
            Campos.Clear();
            Campos1.Clear();
            ComentariosRespuesta.Clear();
            ComentariosRespuesta1.Clear();
            ComentariosRespuesta2.Clear();
            Compromisos.Clear();
            Compromisos1.Clear();
            Contratos.Clear();
            Contratos1.Clear();
            Contratos2.Clear();
            Dependencias.Clear();
            Dependencias1.Clear();
            Dependencias2 = null;
            DocumentosAnexoContrato.Clear();
            DocumentosAnexoContrato1.Clear();
            DocumentosContrato.Clear();
            DocumentosContrato1.Clear();
            DocumentosContrato2.Clear();
            DocumentosContrato3.Clear();
            DocumentosRadicado.Clear();
            DocumentosRadicado1.Clear();
            Empresas.Clear();
            Empresas1.Clear();
            Fases.Clear();
            Fases1.Clear();
            Localizaciones.Clear();
            Localizaciones1.Clear();
            Localizaciones2 = null;
            LogContratos.Clear();
            NovedadesContrato.Clear();
            NovedadesContrato1.Clear();
            NovedadesContrato2.Clear();
            NovedadesFase.Clear();
            NovedadesFase1.Clear();
            PagosObligaciones.Clear();
            PagosObligaciones1.Clear();
            Pozos.Clear();
            Pozos1.Clear();
            Radicados.Clear();
            Radicados1.Clear();
            Radicados2.Clear();
            Radicados3.Clear();
            Radicados4.Clear();
            TiposContrato.Clear();
            TiposContrato1.Clear();
            Compromisos2.Clear();
            Radicados5.Clear();
            TBL_Admin_Roles.Clear();
            ComentariosRespuesta3.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupDependencias2(Dependencias previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_Admin_Usuarios2.Contains(this))
            {
                previousValue.TBL_Admin_Usuarios2.Remove(this);
            }
    
            if (Dependencias2 != null)
            {
                if (!Dependencias2.TBL_Admin_Usuarios2.Contains(this))
                {
                    Dependencias2.TBL_Admin_Usuarios2.Add(this);
                }
    
                IdDependencia = Dependencias2.IdDependencia;
            }
            else if (!skipKeys)
            {
                IdDependencia = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Dependencias2")
                    && (ChangeTracker.OriginalValues["Dependencias2"] == Dependencias2))
                {
                    ChangeTracker.OriginalValues.Remove("Dependencias2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Dependencias2", previousValue);
                }
                if (Dependencias2 != null && !Dependencias2.ChangeTracker.ChangeTrackingEnabled)
                {
                    Dependencias2.StartTracking();
                }
            }
        }
    
        private void FixupLocalizaciones2(Localizaciones previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_Admin_Usuarios2.Contains(this))
            {
                previousValue.TBL_Admin_Usuarios2.Remove(this);
            }
    
            if (Localizaciones2 != null)
            {
                if (!Localizaciones2.TBL_Admin_Usuarios2.Contains(this))
                {
                    Localizaciones2.TBL_Admin_Usuarios2.Add(this);
                }
    
                IdLocalizacion = Localizaciones2.IdLocalizacion;
            }
            else if (!skipKeys)
            {
                IdLocalizacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Localizaciones2")
                    && (ChangeTracker.OriginalValues["Localizaciones2"] == Localizaciones2))
                {
                    ChangeTracker.OriginalValues.Remove("Localizaciones2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Localizaciones2", previousValue);
                }
                if (Localizaciones2 != null && !Localizaciones2.ChangeTracker.ChangeTrackingEnabled)
                {
                    Localizaciones2.StartTracking();
                }
            }
        }
    
        private void FixupAnexosComentarioRespuesta(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AnexosComentarioRespuesta item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AnexosComentarioRespuesta", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AnexosComentarioRespuesta item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AnexosComentarioRespuesta", item);
                    }
                }
            }
        }
    
        private void FixupAnexosComentarioRespuesta1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AnexosComentarioRespuesta item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AnexosComentarioRespuesta1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AnexosComentarioRespuesta item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AnexosComentarioRespuesta1", item);
                    }
                }
            }
        }
    
        private void FixupBloques(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Bloques item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Bloques", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Bloques item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Bloques", item);
                    }
                }
            }
        }
    
        private void FixupBloques1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Bloques item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Bloques1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Bloques item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Bloques1", item);
                    }
                }
            }
        }
    
        private void FixupCampos(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Campos item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Campos", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Campos item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Campos", item);
                    }
                }
            }
        }
    
        private void FixupCampos1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Campos item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Campos1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Campos item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Campos1", item);
                    }
                }
            }
        }
    
        private void FixupComentariosRespuesta(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ComentariosRespuesta item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ComentariosRespuesta", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ComentariosRespuesta item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ComentariosRespuesta", item);
                    }
                }
            }
        }
    
        private void FixupComentariosRespuesta1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ComentariosRespuesta item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ComentariosRespuesta1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ComentariosRespuesta item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ComentariosRespuesta1", item);
                    }
                }
            }
        }
    
        private void FixupComentariosRespuesta2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ComentariosRespuesta item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ComentariosRespuesta2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ComentariosRespuesta item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios2, this))
                    {
                        item.TBL_Admin_Usuarios2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ComentariosRespuesta2", item);
                    }
                }
            }
        }
    
        private void FixupCompromisos(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Compromisos item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Compromisos", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Compromisos item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Compromisos", item);
                    }
                }
            }
        }
    
        private void FixupCompromisos1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Compromisos item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Compromisos1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Compromisos item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Compromisos1", item);
                    }
                }
            }
        }
    
        private void FixupContratos(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Contratos item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Contratos", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Contratos item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Contratos", item);
                    }
                }
            }
        }
    
        private void FixupContratos1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Contratos item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Contratos1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Contratos item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Contratos1", item);
                    }
                }
            }
        }
    
        private void FixupContratos2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Contratos item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Contratos2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Contratos item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios2, this))
                    {
                        item.TBL_Admin_Usuarios2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Contratos2", item);
                    }
                }
            }
        }
    
        private void FixupDependencias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Dependencias item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Dependencias", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Dependencias item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Dependencias", item);
                    }
                }
            }
        }
    
        private void FixupDependencias1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Dependencias item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Dependencias1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Dependencias item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Dependencias1", item);
                    }
                }
            }
        }
    
        private void FixupDocumentosAnexoContrato(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DocumentosAnexoContrato item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DocumentosAnexoContrato", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DocumentosAnexoContrato item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DocumentosAnexoContrato", item);
                    }
                }
            }
        }
    
        private void FixupDocumentosAnexoContrato1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DocumentosAnexoContrato item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DocumentosAnexoContrato1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DocumentosAnexoContrato item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DocumentosAnexoContrato1", item);
                    }
                }
            }
        }
    
        private void FixupDocumentosContrato(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DocumentosContrato item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DocumentosContrato", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DocumentosContrato item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DocumentosContrato", item);
                    }
                }
            }
        }
    
        private void FixupDocumentosContrato1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DocumentosContrato item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DocumentosContrato1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DocumentosContrato item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DocumentosContrato1", item);
                    }
                }
            }
        }
    
        private void FixupDocumentosContrato2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DocumentosContrato item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DocumentosContrato2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DocumentosContrato item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios2, this))
                    {
                        item.TBL_Admin_Usuarios2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DocumentosContrato2", item);
                    }
                }
            }
        }
    
        private void FixupDocumentosContrato3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DocumentosContrato item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DocumentosContrato3", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DocumentosContrato item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios3, this))
                    {
                        item.TBL_Admin_Usuarios3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DocumentosContrato3", item);
                    }
                }
            }
        }
    
        private void FixupDocumentosRadicado(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DocumentosRadicado item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DocumentosRadicado", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DocumentosRadicado item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DocumentosRadicado", item);
                    }
                }
            }
        }
    
        private void FixupDocumentosRadicado1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DocumentosRadicado item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DocumentosRadicado1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DocumentosRadicado item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DocumentosRadicado1", item);
                    }
                }
            }
        }
    
        private void FixupEmpresas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Empresas item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Empresas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Empresas item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Empresas", item);
                    }
                }
            }
        }
    
        private void FixupEmpresas1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Empresas item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Empresas1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Empresas item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Empresas1", item);
                    }
                }
            }
        }
    
        private void FixupFases(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Fases item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Fases", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Fases item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Fases", item);
                    }
                }
            }
        }
    
        private void FixupFases1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Fases item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Fases1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Fases item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Fases1", item);
                    }
                }
            }
        }
    
        private void FixupLocalizaciones(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Localizaciones item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Localizaciones", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Localizaciones item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Localizaciones", item);
                    }
                }
            }
        }
    
        private void FixupLocalizaciones1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Localizaciones item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Localizaciones1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Localizaciones item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Localizaciones1", item);
                    }
                }
            }
        }
    
        private void FixupLogContratos(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LogContratos item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LogContratos", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LogContratos item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LogContratos", item);
                    }
                }
            }
        }
    
        private void FixupNovedadesContrato(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NovedadesContrato item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NovedadesContrato", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NovedadesContrato item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NovedadesContrato", item);
                    }
                }
            }
        }
    
        private void FixupNovedadesContrato1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NovedadesContrato item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NovedadesContrato1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NovedadesContrato item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NovedadesContrato1", item);
                    }
                }
            }
        }
    
        private void FixupNovedadesContrato2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NovedadesContrato item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NovedadesContrato2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NovedadesContrato item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios2, this))
                    {
                        item.TBL_Admin_Usuarios2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NovedadesContrato2", item);
                    }
                }
            }
        }
    
        private void FixupNovedadesFase(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NovedadesFase item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NovedadesFase", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NovedadesFase item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NovedadesFase", item);
                    }
                }
            }
        }
    
        private void FixupNovedadesFase1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NovedadesFase item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NovedadesFase1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NovedadesFase item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NovedadesFase1", item);
                    }
                }
            }
        }
    
        private void FixupPagosObligaciones(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PagosObligaciones item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PagosObligaciones", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PagosObligaciones item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PagosObligaciones", item);
                    }
                }
            }
        }
    
        private void FixupPagosObligaciones1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PagosObligaciones item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PagosObligaciones1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PagosObligaciones item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PagosObligaciones1", item);
                    }
                }
            }
        }
    
        private void FixupPozos(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Pozos item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Pozos", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Pozos item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Pozos", item);
                    }
                }
            }
        }
    
        private void FixupPozos1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Pozos item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Pozos1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Pozos item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Pozos1", item);
                    }
                }
            }
        }
    
        private void FixupRadicados(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Radicados item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Radicados", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Radicados item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Radicados", item);
                    }
                }
            }
        }
    
        private void FixupRadicados1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Radicados item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Radicados1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Radicados item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Radicados1", item);
                    }
                }
            }
        }
    
        private void FixupRadicados2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Radicados item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Radicados2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Radicados item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios2, this))
                    {
                        item.TBL_Admin_Usuarios2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Radicados2", item);
                    }
                }
            }
        }
    
        private void FixupRadicados3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Radicados item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Radicados3", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Radicados item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios3, this))
                    {
                        item.TBL_Admin_Usuarios3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Radicados3", item);
                    }
                }
            }
        }
    
        private void FixupRadicados4(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Radicados item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios4 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Radicados4", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Radicados item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios4, this))
                    {
                        item.TBL_Admin_Usuarios4 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Radicados4", item);
                    }
                }
            }
        }
    
        private void FixupTiposContrato(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TiposContrato item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TiposContrato", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TiposContrato item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios, this))
                    {
                        item.TBL_Admin_Usuarios = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TiposContrato", item);
                    }
                }
            }
        }
    
        private void FixupTiposContrato1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TiposContrato item in e.NewItems)
                {
                    item.TBL_Admin_Usuarios1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TiposContrato1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TiposContrato item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_Admin_Usuarios1, this))
                    {
                        item.TBL_Admin_Usuarios1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TiposContrato1", item);
                    }
                }
            }
        }
    
        private void FixupCompromisos2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Compromisos item in e.NewItems)
                {
                    if (!item.TBL_Admin_Usuarios2.Contains(this))
                    {
                        item.TBL_Admin_Usuarios2.Add(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Compromisos2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Compromisos item in e.OldItems)
                {
                    if (item.TBL_Admin_Usuarios2.Contains(this))
                    {
                        item.TBL_Admin_Usuarios2.Remove(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Compromisos2", item);
                    }
                }
            }
        }
    
        private void FixupRadicados5(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Radicados item in e.NewItems)
                {
                    if (!item.TBL_Admin_Usuarios5.Contains(this))
                    {
                        item.TBL_Admin_Usuarios5.Add(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Radicados5", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Radicados item in e.OldItems)
                {
                    if (item.TBL_Admin_Usuarios5.Contains(this))
                    {
                        item.TBL_Admin_Usuarios5.Remove(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Radicados5", item);
                    }
                }
            }
        }
    
        private void FixupTBL_Admin_Roles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TBL_Admin_Roles item in e.NewItems)
                {
                    if (!item.TBL_Admin_Usuarios.Contains(this))
                    {
                        item.TBL_Admin_Usuarios.Add(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TBL_Admin_Roles", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TBL_Admin_Roles item in e.OldItems)
                {
                    if (item.TBL_Admin_Usuarios.Contains(this))
                    {
                        item.TBL_Admin_Usuarios.Remove(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TBL_Admin_Roles", item);
                    }
                }
            }
        }
    
        private void FixupComentariosRespuesta3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ComentariosRespuesta item in e.NewItems)
                {
                    if (!item.TBL_Admin_Usuarios3.Contains(this))
                    {
                        item.TBL_Admin_Usuarios3.Add(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ComentariosRespuesta3", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ComentariosRespuesta item in e.OldItems)
                {
                    if (item.TBL_Admin_Usuarios3.Contains(this))
                    {
                        item.TBL_Admin_Usuarios3.Remove(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ComentariosRespuesta3", item);
                    }
                }
            }
        }

        #endregion
    }
}
