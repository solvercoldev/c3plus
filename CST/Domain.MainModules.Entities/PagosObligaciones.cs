//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

using Domain.Core.Entities;

namespace Domain.MainModules.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Compromisos))]
    [KnownType(typeof(Monedas))]
    [KnownType(typeof(TBL_Admin_Usuarios))]
    [KnownType(typeof(Terceros))]
    [KnownType(typeof(TiposPagoObligacion))]
    
    public partial class PagosObligaciones: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long IdPagoObligacion
        {
            get { return _idPagoObligacion; }
            set
            {
                if (_idPagoObligacion != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'IdPagoObligacion' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _idPagoObligacion = value;
                    OnPropertyChanged("IdPagoObligacion");
                }
            }
        }
        private long _idPagoObligacion;
    
        [DataMember]
        public long IdCompromiso
        {
            get { return _idCompromiso; }
            set
            {
                if (_idCompromiso != value)
                {
                    ChangeTracker.RecordOriginalValue("IdCompromiso", _idCompromiso);
                    if (!IsDeserializing)
                    {
                        if (Compromisos != null && Compromisos.IdCompromiso != value)
                        {
                            Compromisos = null;
                        }
                    }
                    _idCompromiso = value;
                    OnPropertyChanged("IdCompromiso");
                }
            }
        }
        private long _idCompromiso;
    
        [DataMember]
        public string IdTercero
        {
            get { return _idTercero; }
            set
            {
                if (_idTercero != value)
                {
                    ChangeTracker.RecordOriginalValue("IdTercero", _idTercero);
                    if (!IsDeserializing)
                    {
                        if (Terceros != null && Terceros.IdTercero != value)
                        {
                            Terceros = null;
                        }
                    }
                    _idTercero = value;
                    OnPropertyChanged("IdTercero");
                }
            }
        }
        private string _idTercero;
    
        [DataMember]
        public string IdTipoPagoObligacion
        {
            get { return _idTipoPagoObligacion; }
            set
            {
                if (_idTipoPagoObligacion != value)
                {
                    ChangeTracker.RecordOriginalValue("IdTipoPagoObligacion", _idTipoPagoObligacion);
                    if (!IsDeserializing)
                    {
                        if (TiposPagoObligacion != null && TiposPagoObligacion.IdTipoPagoObligacion != value)
                        {
                            TiposPagoObligacion = null;
                        }
                    }
                    _idTipoPagoObligacion = value;
                    OnPropertyChanged("IdTipoPagoObligacion");
                }
            }
        }
        private string _idTipoPagoObligacion;
    
        [DataMember]
        public string NumeroDocumento
        {
            get { return _numeroDocumento; }
            set
            {
                if (_numeroDocumento != value)
                {
                    _numeroDocumento = value;
                    OnPropertyChanged("NumeroDocumento");
                }
            }
        }
        private string _numeroDocumento;
    
        [DataMember]
        public Nullable<decimal> ValorCobertura
        {
            get { return _valorCobertura; }
            set
            {
                if (_valorCobertura != value)
                {
                    _valorCobertura = value;
                    OnPropertyChanged("ValorCobertura");
                }
            }
        }
        private Nullable<decimal> _valorCobertura;
    
        [DataMember]
        public decimal Valor
        {
            get { return _valor; }
            set
            {
                if (_valor != value)
                {
                    _valor = value;
                    OnPropertyChanged("Valor");
                }
            }
        }
        private decimal _valor;
    
        [DataMember]
        public string IdMoneda
        {
            get { return _idMoneda; }
            set
            {
                if (_idMoneda != value)
                {
                    ChangeTracker.RecordOriginalValue("IdMoneda", _idMoneda);
                    if (!IsDeserializing)
                    {
                        if (Monedas != null && Monedas.IdMoneda != value)
                        {
                            Monedas = null;
                        }
                    }
                    _idMoneda = value;
                    OnPropertyChanged("IdMoneda");
                }
            }
        }
        private string _idMoneda;
    
        [DataMember]
        public string IdMonedaCobertura
        {
            get { return _idMonedaCobertura; }
            set
            {
                if (_idMonedaCobertura != value)
                {
                    ChangeTracker.RecordOriginalValue("IdMonedaCobertura", _idMonedaCobertura);
                    if (!IsDeserializing)
                    {
                        if (Monedas1 != null && Monedas1.IdMoneda != value)
                        {
                            Monedas1 = null;
                        }
                    }
                    _idMonedaCobertura = value;
                    OnPropertyChanged("IdMonedaCobertura");
                }
            }
        }
        private string _idMonedaCobertura;
    
        [DataMember]
        public string Estado
        {
            get { return _estado; }
            set
            {
                if (_estado != value)
                {
                    _estado = value;
                    OnPropertyChanged("Estado");
                }
            }
        }
        private string _estado;
    
        [DataMember]
        public bool IsActive
        {
            get { return _isActive; }
            set
            {
                if (_isActive != value)
                {
                    _isActive = value;
                    OnPropertyChanged("IsActive");
                }
            }
        }
        private bool _isActive;
    
        [DataMember]
        public int CreateBy
        {
            get { return _createBy; }
            set
            {
                if (_createBy != value)
                {
                    ChangeTracker.RecordOriginalValue("CreateBy", _createBy);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_Usuarios != null && TBL_Admin_Usuarios.IdUser != value)
                        {
                            TBL_Admin_Usuarios = null;
                        }
                    }
                    _createBy = value;
                    OnPropertyChanged("CreateBy");
                }
            }
        }
        private int _createBy;
    
        [DataMember]
        public System.DateTime CreateOn
        {
            get { return _createOn; }
            set
            {
                if (_createOn != value)
                {
                    _createOn = value;
                    OnPropertyChanged("CreateOn");
                }
            }
        }
        private System.DateTime _createOn;
    
        [DataMember]
        public int ModifiedBy
        {
            get { return _modifiedBy; }
            set
            {
                if (_modifiedBy != value)
                {
                    ChangeTracker.RecordOriginalValue("ModifiedBy", _modifiedBy);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_Usuarios1 != null && TBL_Admin_Usuarios1.IdUser != value)
                        {
                            TBL_Admin_Usuarios1 = null;
                        }
                    }
                    _modifiedBy = value;
                    OnPropertyChanged("ModifiedBy");
                }
            }
        }
        private int _modifiedBy;
    
        [DataMember]
        public System.DateTime ModifiedOn
        {
            get { return _modifiedOn; }
            set
            {
                if (_modifiedOn != value)
                {
                    _modifiedOn = value;
                    OnPropertyChanged("ModifiedOn");
                }
            }
        }
        private System.DateTime _modifiedOn;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public Compromisos Compromisos
        {
            get { return _compromisos; }
            set
            {
                if (!ReferenceEquals(_compromisos, value))
                {
                    var previousValue = _compromisos;
                    _compromisos = value;
                    FixupCompromisos(previousValue);
                    OnNavigationPropertyChanged("Compromisos");
                }
            }
        }
        private Compromisos _compromisos;
    
        [DataMember]
        public Monedas Monedas
        {
            get { return _monedas; }
            set
            {
                if (!ReferenceEquals(_monedas, value))
                {
                    var previousValue = _monedas;
                    _monedas = value;
                    FixupMonedas(previousValue);
                    OnNavigationPropertyChanged("Monedas");
                }
            }
        }
        private Monedas _monedas;
    
        [DataMember]
        public Monedas Monedas1
        {
            get { return _monedas1; }
            set
            {
                if (!ReferenceEquals(_monedas1, value))
                {
                    var previousValue = _monedas1;
                    _monedas1 = value;
                    FixupMonedas1(previousValue);
                    OnNavigationPropertyChanged("Monedas1");
                }
            }
        }
        private Monedas _monedas1;
    
        [DataMember]
        public TBL_Admin_Usuarios TBL_Admin_Usuarios
        {
            get { return _tBL_Admin_Usuarios; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios, value))
                {
                    var previousValue = _tBL_Admin_Usuarios;
                    _tBL_Admin_Usuarios = value;
                    FixupTBL_Admin_Usuarios(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios");
                }
            }
        }
        private TBL_Admin_Usuarios _tBL_Admin_Usuarios;
    
        [DataMember]
        public TBL_Admin_Usuarios TBL_Admin_Usuarios1
        {
            get { return _tBL_Admin_Usuarios1; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios1, value))
                {
                    var previousValue = _tBL_Admin_Usuarios1;
                    _tBL_Admin_Usuarios1 = value;
                    FixupTBL_Admin_Usuarios1(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios1");
                }
            }
        }
        private TBL_Admin_Usuarios _tBL_Admin_Usuarios1;
    
        [DataMember]
        public Terceros Terceros
        {
            get { return _terceros; }
            set
            {
                if (!ReferenceEquals(_terceros, value))
                {
                    var previousValue = _terceros;
                    _terceros = value;
                    FixupTerceros(previousValue);
                    OnNavigationPropertyChanged("Terceros");
                }
            }
        }
        private Terceros _terceros;
    
        [DataMember]
        public TiposPagoObligacion TiposPagoObligacion
        {
            get { return _tiposPagoObligacion; }
            set
            {
                if (!ReferenceEquals(_tiposPagoObligacion, value))
                {
                    var previousValue = _tiposPagoObligacion;
                    _tiposPagoObligacion = value;
                    FixupTiposPagoObligacion(previousValue);
                    OnNavigationPropertyChanged("TiposPagoObligacion");
                }
            }
        }
        private TiposPagoObligacion _tiposPagoObligacion;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Compromisos = null;
            Monedas = null;
            Monedas1 = null;
            TBL_Admin_Usuarios = null;
            TBL_Admin_Usuarios1 = null;
            Terceros = null;
            TiposPagoObligacion = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupCompromisos(Compromisos previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PagosObligaciones.Contains(this))
            {
                previousValue.PagosObligaciones.Remove(this);
            }
    
            if (Compromisos != null)
            {
                if (!Compromisos.PagosObligaciones.Contains(this))
                {
                    Compromisos.PagosObligaciones.Add(this);
                }
    
                IdCompromiso = Compromisos.IdCompromiso;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Compromisos")
                    && (ChangeTracker.OriginalValues["Compromisos"] == Compromisos))
                {
                    ChangeTracker.OriginalValues.Remove("Compromisos");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Compromisos", previousValue);
                }
                if (Compromisos != null && !Compromisos.ChangeTracker.ChangeTrackingEnabled)
                {
                    Compromisos.StartTracking();
                }
            }
        }
    
        private void FixupMonedas(Monedas previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PagosObligaciones.Contains(this))
            {
                previousValue.PagosObligaciones.Remove(this);
            }
    
            if (Monedas != null)
            {
                if (!Monedas.PagosObligaciones.Contains(this))
                {
                    Monedas.PagosObligaciones.Add(this);
                }
    
                IdMoneda = Monedas.IdMoneda;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Monedas")
                    && (ChangeTracker.OriginalValues["Monedas"] == Monedas))
                {
                    ChangeTracker.OriginalValues.Remove("Monedas");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Monedas", previousValue);
                }
                if (Monedas != null && !Monedas.ChangeTracker.ChangeTrackingEnabled)
                {
                    Monedas.StartTracking();
                }
            }
        }
    
        private void FixupMonedas1(Monedas previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PagosObligaciones1.Contains(this))
            {
                previousValue.PagosObligaciones1.Remove(this);
            }
    
            if (Monedas1 != null)
            {
                if (!Monedas1.PagosObligaciones1.Contains(this))
                {
                    Monedas1.PagosObligaciones1.Add(this);
                }
    
                IdMonedaCobertura = Monedas1.IdMoneda;
            }
            else if (!skipKeys)
            {
                IdMonedaCobertura = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Monedas1")
                    && (ChangeTracker.OriginalValues["Monedas1"] == Monedas1))
                {
                    ChangeTracker.OriginalValues.Remove("Monedas1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Monedas1", previousValue);
                }
                if (Monedas1 != null && !Monedas1.ChangeTracker.ChangeTrackingEnabled)
                {
                    Monedas1.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_Usuarios(TBL_Admin_Usuarios previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PagosObligaciones.Contains(this))
            {
                previousValue.PagosObligaciones.Remove(this);
            }
    
            if (TBL_Admin_Usuarios != null)
            {
                if (!TBL_Admin_Usuarios.PagosObligaciones.Contains(this))
                {
                    TBL_Admin_Usuarios.PagosObligaciones.Add(this);
                }
    
                CreateBy = TBL_Admin_Usuarios.IdUser;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_Usuarios")
                    && (ChangeTracker.OriginalValues["TBL_Admin_Usuarios"] == TBL_Admin_Usuarios))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_Usuarios");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_Usuarios", previousValue);
                }
                if (TBL_Admin_Usuarios != null && !TBL_Admin_Usuarios.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_Usuarios.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_Usuarios1(TBL_Admin_Usuarios previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PagosObligaciones1.Contains(this))
            {
                previousValue.PagosObligaciones1.Remove(this);
            }
    
            if (TBL_Admin_Usuarios1 != null)
            {
                if (!TBL_Admin_Usuarios1.PagosObligaciones1.Contains(this))
                {
                    TBL_Admin_Usuarios1.PagosObligaciones1.Add(this);
                }
    
                ModifiedBy = TBL_Admin_Usuarios1.IdUser;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_Usuarios1")
                    && (ChangeTracker.OriginalValues["TBL_Admin_Usuarios1"] == TBL_Admin_Usuarios1))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_Usuarios1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_Usuarios1", previousValue);
                }
                if (TBL_Admin_Usuarios1 != null && !TBL_Admin_Usuarios1.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_Usuarios1.StartTracking();
                }
            }
        }
    
        private void FixupTerceros(Terceros previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PagosObligaciones.Contains(this))
            {
                previousValue.PagosObligaciones.Remove(this);
            }
    
            if (Terceros != null)
            {
                if (!Terceros.PagosObligaciones.Contains(this))
                {
                    Terceros.PagosObligaciones.Add(this);
                }
    
                IdTercero = Terceros.IdTercero;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Terceros")
                    && (ChangeTracker.OriginalValues["Terceros"] == Terceros))
                {
                    ChangeTracker.OriginalValues.Remove("Terceros");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Terceros", previousValue);
                }
                if (Terceros != null && !Terceros.ChangeTracker.ChangeTrackingEnabled)
                {
                    Terceros.StartTracking();
                }
            }
        }
    
        private void FixupTiposPagoObligacion(TiposPagoObligacion previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PagosObligaciones.Contains(this))
            {
                previousValue.PagosObligaciones.Remove(this);
            }
    
            if (TiposPagoObligacion != null)
            {
                if (!TiposPagoObligacion.PagosObligaciones.Contains(this))
                {
                    TiposPagoObligacion.PagosObligaciones.Add(this);
                }
    
                IdTipoPagoObligacion = TiposPagoObligacion.IdTipoPagoObligacion;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TiposPagoObligacion")
                    && (ChangeTracker.OriginalValues["TiposPagoObligacion"] == TiposPagoObligacion))
                {
                    ChangeTracker.OriginalValues.Remove("TiposPagoObligacion");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TiposPagoObligacion", previousValue);
                }
                if (TiposPagoObligacion != null && !TiposPagoObligacion.ChangeTracker.ChangeTrackingEnabled)
                {
                    TiposPagoObligacion.StartTracking();
                }
            }
        }

        #endregion
    }
}
